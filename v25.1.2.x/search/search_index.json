{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Scurid Docs","text":"<p>Scurid platform offers API first approach to simplify development and deployment of IoT device's identity and its data security at global scale. Scurid's architecture is designed to enable trusted data pipeline between the devices and also between platforms at globally distributed scale.</p>"},{"location":"deployment-options/","title":"Deployment Options","text":"<p>Scurid Inc offers two ways to deploy Scurid Server - Dedicated Managed Service and On-Premise deployment. To help you choose which option is best for you, we have listed the key differences between the two options below.</p> Dedicated Managed Scurid Server Scurid Server On-Premise Scurid Server is hosted by Scurid in a dedicated cloud environment for you. To get your instance today, create a request here. Scurid Server is hosted on your own infrastructure by you. Reduces your need to manage, scale and upgrade your instance and let's you focus on developing your products and services Enables full control on infrastructure deployment of Scurid platform. Devices running Scurid edge components like Edge Agent and MicroScurid-C SDK will, connect to Scurid Server running in the managed environment. Devices running Scurid's edge components will connect to the server(s) running in your infrastructure <p>Info</p> <p>Each Scurid Server instance is a single-tenant instance. This means that your instance is dedicated to you and your organization. Your data is not shared with any other organization.</p>"},{"location":"glossary/","title":"Glossary","text":""},{"location":"glossary/#cryptography-terms","title":"Cryptography terms","text":"Terms Description Hashing Process of generating fixed length output using variable length input dataset."},{"location":"glossary/#distributed-identity-terms","title":"Distributed Identity terms","text":"Terms Description DID Web3.0 enabled digital identity framework. Learn more"},{"location":"glossary/#api-terms","title":"API terms","text":"Terms Description gRPC a Modern open source high performance remote procedure call supporting any environment. Learn more. Protocol Buffers A language neutral, platform, neutral, extensible mechanism for serializing structured data in a forward-compatible and backward-compatible way. nanoPB Nanopb is a small code-size Protocol Buffers implementation in ansi C. It is especially suitable for use in microcontrollers, but fits any memory restricted system. Learn more"},{"location":"glossary/#scurid-terms","title":"Scurid terms","text":"Terms Description Scurid Edge Agent It's an embeddable autonomous agent to offer automatic identity generation, its data security. Putting its users in full control of the digital identity which is owned and controlled by the device. Contrary to SDKs, it offers high performing, multi programming language support APIs. Scurid Backend or Server It's a server application designed to be deployed On-premise or offered as a service. Scurid App A simplified yet powerful identity management dashboard for identities and the Scurid Edge Agens agents deployed in your network Scurid Managed Backend It's the Scurid backend deployed and managed for you in the cloud by Scurid. MicroScurid-C C SDK library for microcontrollers"},{"location":"identityContextEnabledFileTransfer/","title":"Identity Context enabled file transfer","text":"<p>Scurid platform enables you to deliver files to your IoT edge devices, with specific identity context. Allowing you to manage and transfer different configurations bound to specific identity, even on same device! This brings unique capabilities for your devices in scenarios where devices are shared as a service with variety of end users. Scurid Edge Agent handles this separate configurations and downloads automatically.</p>"},{"location":"identityContextEnabledFileTransfer/#pre-requisite","title":"Pre-requisite","text":"<ol> <li>Scurid Agent on the device must be running</li> <li>Identity for which packages are being downloaded must be already approved.  </li> </ol>"},{"location":"identityContextEnabledFileTransfer/#step-1-stage-the-files-via-scurid-app","title":"Step 1 :  Stage the files via Scurid App","text":"<ol> <li>Log into the app and navigate to the desired approved identity </li> <li>Click on context menu to add the path  Once added path will be displayed on the identity card  </li> <li>Click on the context menu again to click on Upload Package option to upload and stage the files </li> <li>Done.</li> </ol>"},{"location":"identityContextEnabledFileTransfer/#step-2-getting-authorized-token","title":"Step 2 :  Getting authorized token","text":"<ol> <li>Scurid edge agent exposes <code>DownloadFiles</code> API endpoint, which will download any content from the server</li> <li>To download contents endpoint expects <code>authorized token</code>,  <code>identity</code> &amp; <code>path</code> which is optional. If no path is provided then the contents will be downloaded at default location defined via <code>-pkg</code> flag</li> </ol> DownloadFiles goJavaScript <pre><code>// getting the token\nconn, err := grpc.Dial(127.0.0.1:4040, grpc.WithInsecure()) // this is a local only call, because agent is running locally on the hardware\n    if err != nil {\n    panic(err)\n}\n\nc := scuridEdgeAgentAPI.NewScuridEdgeAgentAPIClient(conn)\n\n// invoke call to Scurid backend to authenticate and get the token\nt, err := c.GetToken(context.Background(), &amp;scuridEdgeAgentAPI.GetTokenReq{Username: \"did:scurid:0xb1d528b05950687e7ba77F5E6607055E3825A1A3\"})\nif err != nil {\n    log.Errorln(err)\n    return\n}\n\nctx := context.Background()\n\n// adding token to download the content\nmetadata.AppendToOutgoingContext(ctx, \"authorization\", t.GetToken())\nres, err := c.DownloadFiles(ctx, &amp;scuridEdgeAgentAPI.DownloadFilesReq{\n    Identity: did,\n    Path:     downloadPath,\n})\n</code></pre> <pre><code>const path = require('path');\nconst PROTO_PATH = path.resolve(__dirname, './lib/edgeagent.proto');\nconst caller = require('grpc-caller');\nconst client = caller('127.0.0.1:4040', PROTO_PATH, 'ScuridEdgeAgentAPI')\nconst CREATE_INDENTITY_RESPONSE = { did: 'did:scurid:0xb1d528b05950687e7ba77F5E6607055E3825A1A3' };\n\n(async function () {\nconst data = { username: CREATE_INDENTITY_RESPONSE.did };\n\nconst downloadFilesReq = { identity: CREATE_INDENTITY_RESPONSE.did };\nclient.downloadFiles(downloadFilesReq, (downloadFilesErr, downloadFilesRes) =&gt; {\nif (downloadFilesErr) console.error(downloadFilesErr)\nconsole.log(`downloadFilesRes:`, downloadFilesRes);\n    });\n})();\n</code></pre>"},{"location":"monitoring/","title":"Monitoring","text":"<p>Scurid server exposes metrics in  Prometheus format at the <code>/metrics</code> endpoint. The metrics are collected by Prometheus server at regular intervals. Server uses <code>config.yaml</code> file to configure the port and address.  These metrics can easily be visualized using tools like Grafana.</p> <p>By default, the port and the address is set to in the <code>config.yaml</code> file. This is the default configuration for Scurid server on which the metrics are exposed.</p> <pre><code>Monitoring:\n    Port: 8081 #default\n    Address: localhost #default\n</code></pre> <p>If you have already installed and have Scurid Server running with default configuration you can access the metrics at <code>http://localhost:8081/metrics</code>. Otherwise, you can change the port and address in <code>config.yaml</code> file and restart the server.</p>"},{"location":"monitoring/#accessing-server-metrics","title":"Accessing Server Metrics","text":"<p>Prometheus server is deployed separately within your infrastructure, and it scrapes the metrics exposed by Scurid server.</p> <p>If you don't have it already running you can use the docker image to start the server locally.</p>"},{"location":"monitoring/#starting-prometheus-server","title":"Starting Prometheus Server","text":"<p>Prometheus server can be started using docker image. Following example shows how to start Prometheus server using docker image with a configuration file.</p>"},{"location":"monitoring/#prometheus-configuration-file","title":"Prometheus Configuration File","text":"<pre><code>global:\n  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n\nscrape_configs:\n  - job_name: 'scurid_server'\n    static_configs:\n      - targets: ['host.docker.internal:8081']\n</code></pre>"},{"location":"monitoring/#using-docker-to-start-the-prometheus-server","title":"Using docker to start the prometheus server","text":"<pre><code># Use an official Prometheus image as base image\nFROM prom/prometheus\n\n# Copy the Prometheus configuration file into the Docker image\nCOPY prometheus.yaml /etc/prometheus/\n\n# Set the command to start Prometheus with this configuration file\nCMD [ \"--config.file=/etc/prometheus/prometheus.yaml\" ]\n</code></pre>"},{"location":"monitoring/#visualizing-metrics-with-grafana","title":"Visualizing Metrics with Grafana","text":"<p>Next, let's get the Grafana dashboard up and running. Grafana is a visualization tool that can be used to visualize the metrics collected by Prometheus server.</p>"},{"location":"monitoring/#starting-or-installing-grafana","title":"Starting or installing Grafana","text":"<p>If you are installing Grafana for the first time, visit Grafana download page and follow the instructions to install Grafana on your system.</p>"},{"location":"monitoring/#configure-data-source-in-grafana","title":"Configure Data Source in Grafana","text":"<p>Once you have Grafana running, you can configure the Prometheus server as a data source.</p> <ol> <li>Open Grafana in your browser and login .</li> <li>Click on the <code>Connections</code> icon on the left sidebar and select <code>Data Sources</code>.</li> <li>Click on <code>Add data source</code> and select <code>Prometheus</code> from the list.</li> <li>Enter the URL of the Prometheus server in the <code>URL</code> field. If you are running Prometheus server locally, you can use <code>http://localhost:9090</code>.</li> <li>Click on <code>Save &amp; Test</code> to save the data source.</li> <li>You should see a success message if the data source is configured correctly.</li> <li>Click on <code>Dashboards</code> icon on the left sidebar and New, then select <code>Import</code>.</li> <li>On the <code>Import Dashboard</code> page, copy the contents from the section below <code>Pre-configured Dashboard JSON</code> and paste it in the <code>Import via panel json</code> field. </li> <li>Click on <code>Load</code>, select Prometheus data source and then <code>Import</code> to import the dashboard.</li> <li>You should see the dashboard with the metrics .</li> </ol>"},{"location":"monitoring/#pre-configured-dashboard-json","title":"Pre-configured Dashboard JSON","text":"<p>Provides a preconfigured dashboard for Scurid Server monitoring.</p> <pre><code>{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_SCURID_SERVER MONITORING\",\n      \"label\": \"Scurid Server Monitoring\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"panel\",\n      \"id\": \"dashlist\",\n      \"name\": \"Dashboard list\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\",\n      \"version\": \"10.0.2\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations &amp; Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": true,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"description\": \"grpc_server_started_total is a counter metric provided by the grpc_prometheus Go package that gets incremented every time a gRPC server RPC operation is started. This can be useful to track the total number of RPC calls made to your server, or the rate at which RPC calls are being made.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 123128,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(grpc_server_started_total{job=\\\"scurid_server\\\"}[5m])\",\n          \"instant\": false,\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Scurid Server - gRPC Calls made\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"description\": \"This query will calculate the increase in the grpc_server_handled_total metric over the last 5 minutes, grouped by method and service. It'll give you a rough idea of the QPS (queries per second) for each gRPC method.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"series\",\n            \"axisGridShow\": false,\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"smooth\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 0\n      },\n      \"id\": 123124,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (grpc_method, grpc_service) (increase(grpc_server_handled_total[5m]))\",\n          \"instant\": false,\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Scurid-Api-Calls\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"description\": \"This is a counter metric that gets incremented every time a gRPC server receives a message.The counter itself only increases over time, but by taking the rate over a time window, you can see how many messages are received per unit of time.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 7\n      },\n      \"id\": 123126,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(grpc_server_msg_received_total{job=\\\"scurid_server\\\"}[5m])\",\n          \"instant\": false,\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Scurid Server - gRPC Message Ingress\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"description\": \"is a counter metric that gets incremented every time a gRPC server sends a message. Just like grpc_server_msg_received_total, this metric is also provided by the grpc_prometheus Go package.\\n\\nThis metric can be useful for visualizing the rate at which your gRPC server is sending messages.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"smooth\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"id\": 123127,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(grpc_server_msg_sent_total{job=\\\"scurid_server\\\"}[5m])\",\n          \"instant\": false,\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Scurid Server - grpc Message Egress\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"description\": \"\\nThe go_memstats_alloc_bytes metric provided by the Go runtime reports the number of bytes currently allocated in heap memory. This metric can help you monitor your application's memory usage, which is often useful for detecting memory leaks or other memory-related performance issues.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 123125,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"go_memstats_alloc_bytes{job=\\\"scurid_server\\\"}\",\n          \"instant\": false,\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Scurid Server - Go Memory allocation\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n      },\n      \"gridPos\": {\n        \"h\": 15,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"id\": 3,\n      \"links\": [],\n      \"options\": {\n        \"folderId\": 0,\n        \"includeVars\": false,\n        \"keepTime\": false,\n        \"maxItems\": 30,\n        \"query\": \"\",\n        \"showHeadings\": true,\n        \"showRecentlyViewed\": true,\n        \"showSearch\": false,\n        \"showStarred\": true,\n        \"tags\": []\n      },\n      \"pluginVersion\": \"10.0.2\",\n      \"tags\": [],\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_SCURID_SERVER MONITORING}\"\n          },\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Dashboards\",\n      \"type\": \"dashlist\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"hidden\": true,\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ],\n    \"type\": \"timepicker\"\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Scurid Server Monitor\",\n  \"uid\": \"d1a1a8d9-3574-4f32-9504-c87084a1a343\",\n  \"version\": 12,\n  \"weekStart\": \"\"\n}\n</code></pre>"},{"location":"quickstart-overview/","title":"Overview","text":"<p>Quickstart is designed to help you get started with Scurid platform. It covers the following topics:</p> <ul> <li>Quickstart On-Premise</li> <li>Quickstart For Managed</li> </ul> <p>Need help with managed instance configuration details ?</p> <p>We're always there to help! Raise your request here Support</p> <p>Info</p> <p>Scurid platform consists of three main components :</p> <ol> <li>Scurid Edge Agent and MicroScurid-C SDK</li> <li>Scurid Server</li> <li>Desktop App (mobile app coming soon)   </li> </ol>"},{"location":"quickstart-overview/#downloads","title":"Downloads","text":"<p>Navigate to Getting Started to download the latest version of Scurid software components. There are builds available for <code>linux</code>, <code>macos</code> and <code>windows</code> platforms for <code>Server</code>, <code>App</code> and for <code>Edge Agents</code> we have pre-built binaries for several IoT Edge hardware platforms. Download the appropriate build for your platform.</p> Service Agreement <p>By downloading Scurid Software you agree to the Service Agreement</p>"},{"location":"zero-trusttotrustedIdentityforyourIoTDevice/","title":"Zero-trust to trusted Device Identity","text":"<p>This tutorial provides a simplified overview on generating, approving device identity with APIs, and approving it using Scurid Platform App.</p>"},{"location":"zero-trusttotrustedIdentityforyourIoTDevice/#step-1-generate-an-identity","title":"Step 1. Generate an identity","text":"<p>Edge agent is required to run directly on the device, and it exposes gRPC based APIs for your IoT software to interact with. In order to register and monitor the identities generated by each agent you must tell the agent where the Scurid backend is running.</p> <p>Depending on where the Scurid backend is deployed you'll need to pass the address</p> On-PremiseManaged <p>If Scurid backed deployed and managed in your infrastructure.</p> linuxmacoswindows <pre><code>./scuridedgeagent-xxx-xxx --spaaddr my-server-address:443\n</code></pre> <pre><code>./scuridedgeagent-xxx-xxx --spaaddr my-server-address:443\n</code></pre> <pre><code>./scuridedgeagent-xxx-xxx --spaaddr my-server-address:443\n</code></pre> <p>If Scurid backed deployed and managed by Scurid for you.</p> linuxmacoswindows <pre><code>./scuridedgeagent-xxx-xxx --spaaddr managed-demo.scurid.cloud:50050\n</code></pre> <pre><code>./scuridedgeagent-xxx-xxx --spaaddr managed-demo.scurid.cloud:50050\n</code></pre> <pre><code>.\\scuridedgeagent-xxx-xxx --spaaddr managed-demo.scurid.cloud:50050\n</code></pre> <p>Agent exposes a set of local gRPC APIs. That can be compiled in over 10 languages. The following are some examples in different programing languages</p> GoPythonJavascript <pre><code>c := api.NewScuridEdgeAgentAPIClient(conn)\nres, err := c.CreateDeviceIdentity(context.Background(), &amp;api.CreateDeviceIdentityReq{})\n</code></pre> <pre><code>def createidentitydemo():\ntry:\n    ireq = edgeagent_pb2.CreateDeviceIdentityReq()\n    req = stub.CreateDeviceIdentity(ireq)\nexcept grpc.RpcError as e:\n    print(f'failed setting: {e.details}')\nelse:\n    print(req)\n</code></pre> <pre><code>(async function () {\nconst response = await GRPCService.runService('CreateDeviceIdentity');\nconsole.log(`CreateDeviceIdentity:response=`, response);\n})();\n</code></pre> <p>Identity generation produces following public key e.g. <code>did:scurid:0xe8051e21cBaD5E4BdcaA86D20d06DF2667E098b0</code>, uniquely identifying the device for a context. </p>"},{"location":"zero-trusttotrustedIdentityforyourIoTDevice/#step-2-send-identity-registration-request","title":"Step 2. Send identity registration request","text":"<p><code>RegisterDeviceIdentity</code> API enables your device IoT software to send new identity, generated in step above, to the Scurid backend server</p> GoPythonJavascript <pre><code>c := api.NewScuridEdgeAgentAPIClient(conn)\nres, err := c.RegisterDeviceIdentity(context.Background(), &amp;api.RegisterDeviceIdentityReq{\n    Did:           \"did:scurid:0xe8051e21cBaD5E4BdcaA86D20d06DF2667E098b0\",\n    UnixTime:      time.Now().Unix(),\n    DeviceName:    \"rasp4-demo-id\",\n    DeviceContext: nil,\n})\n</code></pre> <p>Example coming soon!</p> <pre><code>const GRPCService = require('./lib/grpc-service');\nconst moment = require('moment');\nconst CREATE_INDENTITY_RESPONSE = { did: 'did:scurid:0xe8051e21cBaD5E4BdcaA86D20d06DF2667E098b0' };\nconst DEVICE_NAME = 'rasp4-demo-id';\n\n(async function () {\nconst response = await GRPCService.runService('RegisterDeviceIdentity', {\ndid: CREATE_INDENTITY_RESPONSE.did,\nunixTime: moment().unix() * 1000,\ndeviceName: DEVICE_NAME,\ndeviceContext: {}\n});\nconsole.log(`RegisterDeviceIdentity:response=`, response);\n})();\n</code></pre>"},{"location":"zero-trusttotrustedIdentityforyourIoTDevice/#step-3-review-pending-identity","title":"Step 3. Review pending identity","text":"<ol> <li>Navigate to the Scurid App's <code>Identities</code> &gt; <code>Pending</code> list to review the pending identities </li> <li>Select the pending identity for the approval </li> <li>Notice you can review the device context attached to the identity, click Allow</li> <li>Once approved this identity can be viewed in the approved list </li> <li>Device context, recorded together with the identity, is hashed and bound with each identity serving as identity's genesis information. </li> </ol> <p>Once approved, an identity's workflow is completed, and it is ready for use with variety of different platforms like IoT or Analytics platforms etc.</p>"},{"location":"agent/flags/","title":"Flags","text":""},{"location":"agent/flags/#command-line-flags-from-maingo","title":"Command-line Flags (from main.go)","text":"<p>Flags to help you configure the agent at the startup. These flags can be set in the command line when starting the agent or added to a configuration file.</p> Flag Type Default Description -port string :4040 The port on which the agent will listen. -address string localhost The address for the agent on which it will listen. -spaaddr string localhost:443 The address of the Scurid Server. -store string ./store Path where the device's keys/keystore will be stored. -pkg string ./pkg/ Path where the device package will be stored. This is the default path where files will be downloaded when using the DownloadFile API. Note: files that the agent downloads automatically (such as updates or configuration files) are stored in a separate path, not controlled by this flag. -syncrate duration 10s Synchronization/heartbeat rate (e.g., 15s). -name string \"\" The name of the agent. If not defined a custom name will be assigned by the server. -log string ./log Folder where logs will be stored (created if missing). -logtofile bool false If true, logs will be written to file only. -sshport int 2200 Scurid server SSH port. If this port is changed on the server, it must also be updated here. -localssh string localhost:22 Local SSH address for the agent."},{"location":"api/grpc/auth/","title":"Auth API Documentation","text":""},{"location":"api/grpc/auth/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>auth.proto</p> <ul> <li>LoginReq</li> <li>LoginRes</li> <li>RefreshTokenReq</li> <li>RefreshTokenRes</li> <li>SetInitialPassphraseReq</li> <li>SetInitialPassphraseRes</li> <li>UserStruct</li> <li>VerifyTokenReq</li> <li> <p>VerifyTokenRes</p> </li> <li> <p>Auth</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/auth/#authproto","title":"auth.proto","text":""},{"location":"api/grpc/auth/#loginreq","title":"LoginReq","text":"Field Type Label Description user UserStruct public DID or username password string signed public DID + requestTime from the edge agent requestTime int64 edge agent's unix int64 UTC timestamp"},{"location":"api/grpc/auth/#loginres","title":"LoginRes","text":"Field Type Label Description token string"},{"location":"api/grpc/auth/#refreshtokenreq","title":"RefreshTokenReq","text":"Field Type Label Description oldToken string"},{"location":"api/grpc/auth/#refreshtokenres","title":"RefreshTokenRes","text":"Field Type Label Description newToken string"},{"location":"api/grpc/auth/#setinitialpassphrasereq","title":"SetInitialPassphraseReq","text":"Field Type Label Description passphrase string"},{"location":"api/grpc/auth/#setinitialpassphraseres","title":"SetInitialPassphraseRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/auth/#userstruct","title":"UserStruct","text":"Field Type Label Description userDID string username string"},{"location":"api/grpc/auth/#verifytokenreq","title":"VerifyTokenReq","text":"<p>Expects token received post login / refresh process</p> Field Type Label Description token string <p></p>"},{"location":"api/grpc/auth/#verifytokenres","title":"VerifyTokenRes","text":"<p>returns True if token is valid, else false</p> Field Type Label Description res bool <p></p>"},{"location":"api/grpc/auth/#auth","title":"Auth","text":"<p>Auth defines authentication service</p> Method Name Request Type Response Type Description Login LoginReq LoginRes SetInitialPassphrase SetInitialPassphraseReq SetInitialPassphraseRes RefreshToken RefreshTokenReq RefreshTokenRes VerifyToken VerifyTokenReq VerifyTokenRes"},{"location":"api/grpc/auth/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/certificate/","title":"Certificate API Documentation","text":""},{"location":"api/grpc/certificate/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>certificate.proto</p> <ul> <li>CSR</li> <li>CSRCustom</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/certificate/#certificateproto","title":"certificate.proto","text":""},{"location":"api/grpc/certificate/#csr","title":"CSR","text":"Field Type Label Description data bytes certificate signing request from the grpc server lifetime int32 lifetime of certificate"},{"location":"api/grpc/certificate/#csrcustom","title":"CSRCustom","text":"<p>CSRCustom provides custom fields for the certificate signing request currently to be used for agent configuration more fields can be added as needed in the future to expand the functionality</p> Field Type Label Description commonName string common name of the certificate country string country of the certificate province string province of the certificate locality string locality of the certificate organization string organization of the certificate organizationalUnit string organizational unit of the certificate emailAddress string email address of the certificate lifetimeDays int32 lifetime of certificate"},{"location":"api/grpc/certificate/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/deviceContext/","title":"Device Context API Documentation","text":""},{"location":"api/grpc/deviceContext/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>deviceContext.proto</p> <ul> <li>DeviceContext</li> <li>MacAddress</li> <li>OsInfo</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/deviceContext/#devicecontextproto","title":"deviceContext.proto","text":""},{"location":"api/grpc/deviceContext/#devicecontext","title":"DeviceContext","text":"<p>Device context from the device in relation to the device identity</p> Field Type Label Description macAddresses MacAddress repeated optional, all MAC addresses available to be picked up by the agent ipAddress string optional, IP address cpu string optional, number of CPUs available ram string optional, RAM size on the device imeiNumber string optional, International Mobile Equipment Identity, optional, capture if one is available osType OsInfo <p></p>"},{"location":"api/grpc/deviceContext/#macaddress","title":"MacAddress","text":"<p>list of macAddresses from the devices</p> Field Type Label Description mtu int32 optional, maximum transmission unit macAddress string optional name string interface's name e.g. en0 <p></p>"},{"location":"api/grpc/deviceContext/#osinfo","title":"OsInfo","text":"<p>OsInfo message structure defining standard OS info used within the system</p> Field Type Label Description osType string optional, e.g. darwin, windows, etc. arch string optional, e.g. amd64 etc."},{"location":"api/grpc/deviceContext/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/deviceData/","title":"Device Data API Documentation","text":""},{"location":"api/grpc/deviceData/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>deviceData.proto</p> <ul> <li>BeaconStructure</li> <li>DataPacketMetadata</li> <li>DataTimestamp</li> <li>DeviceData</li> <li>GetAgentDataReq</li> <li>GetAgentDataRes</li> <li>GetAgentDataStatReq</li> <li>GetAgentDataStatRes</li> <li>MaWaRouteDataStruct</li> <li>QueryStruct</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/deviceData/#devicedataproto","title":"deviceData.proto","text":""},{"location":"api/grpc/deviceData/#beaconstructure","title":"BeaconStructure","text":"Field Type Label Description uuid string major int32 minor int32 rssi int32"},{"location":"api/grpc/deviceData/#datapacketmetadata","title":"DataPacketMetadata","text":"Field Type Label Description signature string"},{"location":"api/grpc/deviceData/#datatimestamp","title":"DataTimestamp","text":"Field Type Label Description timestamp int64 device's UTC timestamp UNIX nanoseconds"},{"location":"api/grpc/deviceData/#devicedata","title":"DeviceData","text":"Field Type Label Description timestamp DataTimestamp data string contains device data formatted in json metadata DataPacketMetadata"},{"location":"api/grpc/deviceData/#getagentdatareq","title":"GetAgentDataReq","text":"Field Type Label Description agentID string query QueryStruct"},{"location":"api/grpc/deviceData/#getagentdatares","title":"GetAgentDataRes","text":"Field Type Label Description data DeviceData json data stored in the database deviceDataColumnNames string json formatted column names"},{"location":"api/grpc/deviceData/#getagentdatastatreq","title":"GetAgentDataStatReq","text":"Field Type Label Description agentID string"},{"location":"api/grpc/deviceData/#getagentdatastatres","title":"GetAgentDataStatRes","text":"Field Type Label Description dataCount int64 totalVerifiableData int64 totalUnverifiableData int64 listOfUnverifiableData int64 repeated todo: send list of rowid in the future statsLastUpdatedOn int64"},{"location":"api/grpc/deviceData/#querystruct","title":"QueryStruct","text":"<p>used for querying data from the backend for a specific time range</p> Field Type Label Description startTimestamp int64 endTimestamp int64"},{"location":"api/grpc/deviceData/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/edgeAgent/","title":"Edge Agent API Documentation","text":""},{"location":"api/grpc/edgeAgent/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>edgeagent.proto</p> <ul> <li>CreateDeviceIdentityReq</li> <li>CreateDeviceIdentityRes</li> <li>DeleteDeviceIdentityReq</li> <li>DeleteDeviceIdentityRes</li> <li>DownloadFilesReq</li> <li>DownloadFilesRes</li> <li>Empty</li> <li>GetDeviceIdentityReq</li> <li>GetDeviceIdentityRes</li> <li>GetOnboardingPackageReq</li> <li>GetOnboardingPackageRes</li> <li>GetScuridEdgeAgentVersionRes</li> <li>GetTokenReq</li> <li>GetTokenRes</li> <li>RegisterDeviceIdentityReq</li> <li>RegisterDeviceIdentityRes</li> <li>SendDeviceDataReq</li> <li>SendDeviceDataRes</li> <li>SendDeviceDataWithCustomFieldsReq</li> <li>SendDeviceDataWithCustomFieldsRes</li> <li>SignBytePayloadWithIdentityReq</li> <li>SignBytePayloadWithIdentityRes</li> <li>SignWithIdentityReq</li> <li>SignWithIdentityRes</li> <li>VerifyBytePayloadWithIdentityReq</li> <li>VerifyBytePayloadWithIdentityRes</li> <li>VerifySignatureReq</li> <li> <p>VerifySignatureRes</p> </li> <li> <p>ScuridEdgeAgentAPI</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/edgeAgent/#edgeagentproto","title":"edgeagent.proto","text":""},{"location":"api/grpc/edgeAgent/#createdeviceidentityreq","title":"CreateDeviceIdentityReq","text":"<p>left blank intentionally</p> <p></p>"},{"location":"api/grpc/edgeAgent/#createdeviceidentityres","title":"CreateDeviceIdentityRes","text":"Field Type Label Description did string"},{"location":"api/grpc/edgeAgent/#deletedeviceidentityreq","title":"DeleteDeviceIdentityReq","text":"Field Type Label Description did string"},{"location":"api/grpc/edgeAgent/#deletedeviceidentityres","title":"DeleteDeviceIdentityRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/edgeAgent/#downloadfilesreq","title":"DownloadFilesReq","text":"<p>request structure to be sent</p> Field Type Label Description identity string device's public identity path string where ever user wants to store the files <p></p>"},{"location":"api/grpc/edgeAgent/#downloadfilesres","title":"DownloadFilesRes","text":"<p>true if all files are downloaded, else false - check error for details</p> Field Type Label Description result bool True/False, confirms if the files have been downloaded, check for error if false <p></p>"},{"location":"api/grpc/edgeAgent/#empty","title":"Empty","text":"<p>left blank</p> <p></p>"},{"location":"api/grpc/edgeAgent/#getdeviceidentityreq","title":"GetDeviceIdentityReq","text":"<p>DID to be checked if it exists</p> Field Type Label Description did string <p></p>"},{"location":"api/grpc/edgeAgent/#getdeviceidentityres","title":"GetDeviceIdentityRes","text":"<p>provides validation that device's DID is already generated</p> Field Type Label Description did string <p></p>"},{"location":"api/grpc/edgeAgent/#getonboardingpackagereq","title":"GetOnboardingPackageReq","text":"Field Type Label Description did string public DID"},{"location":"api/grpc/edgeAgent/#getonboardingpackageres","title":"GetOnboardingPackageRes","text":"Field Type Label Description onboardingPkg string can contain any kind of on boarding information, JSON, XML etc."},{"location":"api/grpc/edgeAgent/#getscuridedgeagentversionres","title":"GetScuridEdgeAgentVersionRes","text":"<p>provides what agent version is currently installed on the hardware</p> Field Type Label Description agentVersion string <p></p>"},{"location":"api/grpc/edgeAgent/#gettokenreq","title":"GetTokenReq","text":"Field Type Label Description username string public DID"},{"location":"api/grpc/edgeAgent/#gettokenres","title":"GetTokenRes","text":"Field Type Label Description token string short lived encrypted token returned by the server on successful login"},{"location":"api/grpc/edgeAgent/#registerdeviceidentityreq","title":"RegisterDeviceIdentityReq","text":"<p>sent by any client using the edge agent for generating the identity req expects fields of type GetDeviceIdentityReq and GetScuridEdgeAgentVersionRes</p> Field Type Label Description did string public identity of DID unixTime int64 time of request deviceName string device name provided by the Iot Software interacting with the agent <p></p>"},{"location":"api/grpc/edgeAgent/#registerdeviceidentityres","title":"RegisterDeviceIdentityRes","text":"<p>Response for registration request from the caller</p> Field Type Label Description result bool simply a confirmation if request has been received or not <p></p>"},{"location":"api/grpc/edgeAgent/#senddevicedatareq","title":"SendDeviceDataReq","text":"<p>Note: ensure to acquire login token for the agent which is trying to send this data</p> Field Type Label Description identity string device's public identity deviceData string this is the json string <p></p>"},{"location":"api/grpc/edgeAgent/#senddevicedatares","title":"SendDeviceDataRes","text":"Field Type Label Description result bool True/False, confirms if the data has been sent successfully, check for error if false"},{"location":"api/grpc/edgeAgent/#senddevicedatawithcustomfieldsreq","title":"SendDeviceDataWithCustomFieldsReq","text":"Field Type Label Description agentDID string data string repeated array of JSON formatted data"},{"location":"api/grpc/edgeAgent/#senddevicedatawithcustomfieldsres","title":"SendDeviceDataWithCustomFieldsRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/edgeAgent/#signbytepayloadwithidentityreq","title":"SignBytePayloadWithIdentityReq","text":"Field Type Label Description payload bytes array if bytes to be signed did string identity i.e. did:scurid:XXXXXXXXXXX ; NOTE identity is case sensitive"},{"location":"api/grpc/edgeAgent/#signbytepayloadwithidentityres","title":"SignBytePayloadWithIdentityRes","text":"Field Type Label Description signature string generated signature"},{"location":"api/grpc/edgeAgent/#signwithidentityreq","title":"SignWithIdentityReq","text":"Field Type Label Description payload string data to be signed did string identity i.e. did:scurid:XXXXXXXXXXX ; note identity is case sensitive"},{"location":"api/grpc/edgeAgent/#signwithidentityres","title":"SignWithIdentityRes","text":"Field Type Label Description signature string generated signature"},{"location":"api/grpc/edgeAgent/#verifybytepayloadwithidentityreq","title":"VerifyBytePayloadWithIdentityReq","text":"Field Type Label Description signature string payload bytes did string identity i.e. did:scurid:XXXXXXXXXXX ; NOTE: identity is case sensitive"},{"location":"api/grpc/edgeAgent/#verifybytepayloadwithidentityres","title":"VerifyBytePayloadWithIdentityRes","text":"Field Type Label Description isValid bool true if valid, else false (Defaults to False)"},{"location":"api/grpc/edgeAgent/#verifysignaturereq","title":"VerifySignatureReq","text":"Field Type Label Description signature string payload string did string identity i.e. did:scurid:XXXXXXXXXXX ; note identity is case sensitive"},{"location":"api/grpc/edgeAgent/#verifysignatureres","title":"VerifySignatureRes","text":"Field Type Label Description isValid bool true if valid, else false"},{"location":"api/grpc/edgeAgent/#scuridedgeagentapi","title":"ScuridEdgeAgentAPI","text":"Method Name Request Type Response Type Description CreateDeviceIdentity CreateDeviceIdentityReq CreateDeviceIdentityRes Create an identity DeleteDeviceDID DeleteDeviceIdentityReq DeleteDeviceIdentityRes Delete an existing DID GetDeviceIdentity GetDeviceIdentityReq GetDeviceIdentityRes Validates if particular identity was already created locally GetScuridEdgeAgentVersion Empty GetScuridEdgeAgentVersionRes Get currently installed version of edge agent SignWithIdentity SignWithIdentityReq SignWithIdentityRes Signs a payload with identity VerifySignature VerifySignatureReq VerifySignatureRes Verifies a signature tagged to the payload SignBytePayloadWithIdentity SignBytePayloadWithIdentityReq SignBytePayloadWithIdentityRes Signs a byte array payload with identity VerifyBytePayloadWithIdentity VerifyBytePayloadWithIdentityReq VerifyBytePayloadWithIdentityRes Verifies a byte array payload with identity RegisterDeviceIdentity RegisterDeviceIdentityReq RegisterDeviceIdentityRes To be called for registering the device identity for the first time Expects additional device data that will be used for binding the identity with the device GetToken GetTokenReq GetTokenRes GetToken to receive required token from Scurid Platform App Needed in order to access APIs that need authentication from the Scurid Platform App Not used for authentication locally on the Scurid Edge Agent Also used for refreshing the token DownloadFiles DownloadFilesReq DownloadFilesRes Used for downloading one or more files number of files to download will depend on files prepared by the admin on Scurid Platform App SendDeviceData SendDeviceDataReq SendDeviceDataRes invokes send data services within the Agent to send to the Scurid backend Server SendDeviceDataWithCustomFields SendDeviceDataWithCustomFieldsReq SendDeviceDataWithCustomFieldsRes SendDeviceDataWithCustomFields this is used to send data to the Scurid backend Server with JSON formatted with custom fields"},{"location":"api/grpc/edgeAgent/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/integration/","title":"Integration API Documentation","text":""},{"location":"api/grpc/integration/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>integration.proto</p> <ul> <li>Azure</li> <li>Hawkbit</li> <li>IntegrationDetails</li> <li>IntegrationStatus</li> <li>ThingWorx</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/integration/#integrationproto","title":"integration.proto","text":""},{"location":"api/grpc/integration/#azure","title":"Azure","text":"<p>For Azure IoT &amp; Azure Device Provisioning Service</p> Field Type Label Description csrSigningCertificate bytes this is the certificate used to sign the CSR to issue device certificates privateKey bytes this is the private key used to sign the CSR to issue device certificates <p></p>"},{"location":"api/grpc/integration/#hawkbit","title":"Hawkbit","text":"<p>For Hawkbit Server</p> Field Type Label Description hawkbitURL string hawkbit server URL &amp; port information e.g. https://localhost:8080 username string username from Hawkbit server password string password from Hawkbit server <p></p>"},{"location":"api/grpc/integration/#integrationdetails","title":"IntegrationDetails","text":"<p>IntegrationDetails contains information on integration with 3rd party platforms</p> Field Type Label Description hawkbitTargetSecretKey string a target in Hawkbit is device, when a device is pre-provisioned it will create a secret key which is specific to each device deviceCertificateSigningRequest string this is the certificate signing request received from the agent. deviceCertificate bytes if Azure is enabled, and agent is approved, scurid server will sign the request to generate the certificate, which we can store here integrationStatus IntegrationStatus thingworxApplicationKey string this is the device application key issued from ThingWorx thingworxAppKeyName string this is the name of the app key in ThingWorx csrCustom certificate.v1.CSRCustom this is the custom CSR information <p></p>"},{"location":"api/grpc/integration/#integrationstatus","title":"IntegrationStatus","text":"<p>IntegrationStatus should be used to track which 3rd party integrations are enabled.</p> Field Type Label Description thingWorxEnabled bool is thingworx integration enabled hawkbitEnabled bool is hawkbit integration enabled azureEnabled bool is azure integration enabled <p></p>"},{"location":"api/grpc/integration/#thingworx","title":"ThingWorx","text":"<p>For Thingworx Server</p> Field Type Label Description thingWorxURL string thingworx server and port information e.g. https://localhost:443/Thingworx appKey string thingworx app key created for Scurid server to authenticate with useThingWorxEntityNameToDownloadAppKey bool if true, then the app key will be downloaded from thingworx using the entity name"},{"location":"api/grpc/integration/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/logapi/","title":"Log API Documentation","text":""},{"location":"api/grpc/logapi/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>log.proto</p> <ul> <li>AppLog</li> <li>IdentityLog</li> <li>LogRange</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/logapi/#logproto","title":"log.proto","text":""},{"location":"api/grpc/logapi/#applog","title":"AppLog","text":"Field Type Label Description type string INFO, WARN, DEBUG, TRACE, ERROR message string string value of the message eventTime int64 UNIX NANO timestamp"},{"location":"api/grpc/logapi/#identitylog","title":"IdentityLog","text":"Field Type Label Description action string e.g. approved, revoked, pending or rejected. eventTimestamp int64 recorded timestamp of the event signature string tamper evident signature on the platformDID string user who performed the action - currently this is going to be the Platform DID did string identity for device or agents"},{"location":"api/grpc/logapi/#logrange","title":"LogRange","text":"Field Type Label Description from int64 start timestamp to int64 stop timestamp"},{"location":"api/grpc/logapi/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/microscurid/","title":"MicroScurid-C API Documentation","text":""},{"location":"api/grpc/microscurid/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>microscurid.proto</p> <ul> <li>Login</li> <li>LoginRes</li> <li>RegisterDeviceIdentity</li> <li>RegisterDeviceIdentityRes</li> <li>ReqMetadata</li> <li> <p>VerifySignature</p> </li> <li> <p>ReqMetadata.ReqType</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/microscurid/#microscuridproto","title":"microscurid.proto","text":""},{"location":"api/grpc/microscurid/#login","title":"Login","text":"<p>Used for log in</p> Field Type Label Description username string public DID <p></p>"},{"location":"api/grpc/microscurid/#loginres","title":"LoginRes","text":"Field Type Label Description token string short lived encrypted token returned by the server on successful login"},{"location":"api/grpc/microscurid/#registerdeviceidentity","title":"RegisterDeviceIdentity","text":"<p>RegisterDeviceIdentity contains the required structure to register a newly generated Identity on the hardware TODO: Enhance with other hardware details to include DeviceContext</p> Field Type Label Description did string DID generated on the device unixTime int64 time of request deviceName string device name provided by the user <p></p>"},{"location":"api/grpc/microscurid/#registerdeviceidentityres","title":"RegisterDeviceIdentityRes","text":"<p>RegisterDeviceIdentityRes returns required response.</p> Field Type Label Description result bool <p></p>"},{"location":"api/grpc/microscurid/#reqmetadata","title":"ReqMetadata","text":"Field Type Label Description reqType ReqMetadata.ReqType registerDeviceIdentity RegisterDeviceIdentity optional verifySignature VerifySignature optional login Login optional"},{"location":"api/grpc/microscurid/#verifysignature","title":"VerifySignature","text":"Field Type Label Description signature string msgHashPayload string did string compressedPublicKey string"},{"location":"api/grpc/microscurid/#reqmetadatareqtype","title":"ReqMetadata.ReqType","text":"Name Number Description UnknownReq 0 UnknownReq, default fallback field in case unknown enum information is sent from the MicroScurid IdentityRegistration 1 IdentityRegistration, used for registering an incoming request with DID (identity) from the device via MicroScurid Verify 2 Verify, used for verifying the signature coming along with the identity and the"},{"location":"api/grpc/microscurid/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/platform-internals/","title":"Platform Internal APIs Documentation","text":""},{"location":"api/grpc/platform-internals/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>platformInternal.proto</p> <ul> <li>CloudProviders</li> <li>CreateCredentialsReq</li> <li>CreateCredentialsRes</li> <li>DataStoreRegion</li> <li>DataStoreRegionForAgent</li> <li>DatabaseCredential</li> <li>GetAgentConfigReq</li> <li>GetAgentConfigRes</li> <li>GetAgentRegionConfigReq</li> <li>GetAgentRegionConfigRes</li> <li>GetCloudProvidersReq</li> <li>GetCloudProvidersRes</li> <li>GetCredentialsReq</li> <li>GetCredentialsRes</li> <li>GetDBRegionListReq</li> <li>GetDBRegionListRes</li> <li>GetUserRegionConfigReq</li> <li>GetUserRegionConfigRes</li> <li>OtherPlatformIntegrationReq</li> <li>OtherPlatformIntegrationRes</li> <li>RegionConfigForAgent</li> <li>RequestAgentRegistrationReq</li> <li>RequestAgentRegistrationRes</li> <li>SendReq</li> <li>SendRes</li> <li>SendWithUserDefinedFieldsReq</li> <li>SendWithUserDefinedFieldsRes</li> <li>StatusCheckReq</li> <li>StatusCheckRes</li> <li>StoreAgentRegionConfigReq</li> <li>StoreAgentRegionConfigRes</li> <li>StoreRegionConfigReq</li> <li>StoreRegionConfigRes</li> <li> <p>ThingWorx</p> </li> <li> <p>AgentManagement</p> </li> <li>CustomSender</li> <li>DataStorage</li> <li>DeviceDataManagement</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/platform-internals/#platforminternalproto","title":"platformInternal.proto","text":""},{"location":"api/grpc/platform-internals/#cloudproviders","title":"CloudProviders","text":"Field Type Label Description name string e.g. AWS, GCP, Azure etc."},{"location":"api/grpc/platform-internals/#createcredentialsreq","title":"CreateCredentialsReq","text":"Field Type Label Description credential DatabaseCredential dataStoreRegionId int64 this is the internal id assigned by Scurid; it must be available to create an identity. Call GetUserRegionConfig to get the id if not available."},{"location":"api/grpc/platform-internals/#createcredentialsres","title":"CreateCredentialsRes","text":"Field Type Label Description res bool"},{"location":"api/grpc/platform-internals/#datastoreregion","title":"DataStoreRegion","text":"Field Type Label Description regionName string e.g. west-eu-1, japan-east-1, names returned here must match the naming conventions from the cloud id int64 this is the internal id assigned by Scurid gps string this is the gps location of the datacenter provided by the cloud provider enabled bool default is false, if region's available true is returned regionGroup string e.g. EMEA, APAC, US, etc. cloudProviderName string e.g. AWS, GCP, Azure etc."},{"location":"api/grpc/platform-internals/#datastoreregionforagent","title":"DataStoreRegionForAgent","text":"<p>for agents under user / customer</p> Field Type Label Description data DataStoreRegion this is the regional and cloud configuration defined by the users platformIdentity string this is the did of the platform isAgentEnabled bool this provides information if the agent has been enabled by the user for data storage. <p></p>"},{"location":"api/grpc/platform-internals/#databasecredential","title":"DatabaseCredential","text":"Field Type Label Description username string password string databaseName string"},{"location":"api/grpc/platform-internals/#getagentconfigreq","title":"GetAgentConfigReq","text":"Field Type Label Description AgentID string"},{"location":"api/grpc/platform-internals/#getagentconfigres","title":"GetAgentConfigRes","text":"Field Type Label Description integrationDetails integration.IntegrationDetails"},{"location":"api/grpc/platform-internals/#getagentregionconfigreq","title":"GetAgentRegionConfigReq","text":"Field Type Label Description agentIdentity string this is the agent identity, i.e. the DID, caller can request information on one"},{"location":"api/grpc/platform-internals/#getagentregionconfigres","title":"GetAgentRegionConfigRes","text":"Field Type Label Description agentRegionInfo DataStoreRegionForAgent repeated"},{"location":"api/grpc/platform-internals/#getcloudprovidersreq","title":"GetCloudProvidersReq","text":"<p>intentionally left empty</p> <p></p>"},{"location":"api/grpc/platform-internals/#getcloudprovidersres","title":"GetCloudProvidersRes","text":"Field Type Label Description providers CloudProviders repeated"},{"location":"api/grpc/platform-internals/#getcredentialsreq","title":"GetCredentialsReq","text":"Field Type Label Description platformIdentity string"},{"location":"api/grpc/platform-internals/#getcredentialsres","title":"GetCredentialsRes","text":"Field Type Label Description credentials DatabaseCredential repeated"},{"location":"api/grpc/platform-internals/#getdbregionlistreq","title":"GetDBRegionListReq","text":"Field Type Label Description cloudProviderName string this the name of the"},{"location":"api/grpc/platform-internals/#getdbregionlistres","title":"GetDBRegionListRes","text":"Field Type Label Description regionInfo DataStoreRegion"},{"location":"api/grpc/platform-internals/#getuserregionconfigreq","title":"GetUserRegionConfigReq","text":"Field Type Label Description platformIdentity string this is the platform DID of the user"},{"location":"api/grpc/platform-internals/#getuserregionconfigres","title":"GetUserRegionConfigRes","text":"Field Type Label Description userCreatedRegions DataStoreRegion repeated"},{"location":"api/grpc/platform-internals/#otherplatformintegrationreq","title":"OtherPlatformIntegrationReq","text":"Field Type Label Description thingWorx ThingWorx config. related to ThingWorx"},{"location":"api/grpc/platform-internals/#otherplatformintegrationres","title":"OtherPlatformIntegrationRes","text":"Field Type Label Description thingWorx ThingWorx"},{"location":"api/grpc/platform-internals/#regionconfigforagent","title":"RegionConfigForAgent","text":"Field Type Label Description agentIdentity string this is the DID of the agent regionConfigId int64 this MUST be acquired by calling GetUserRegionConfig. The regions used for storing the information for the agent must already have been created in the system"},{"location":"api/grpc/platform-internals/#requestagentregistrationreq","title":"RequestAgentRegistrationReq","text":"<p>response message for RequestAgentRegistration</p> Field Type Label Description agentVerInfo string edge agent version used for creating DID requestedOn int64 Unix timestamp when identity was created deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity signatureOnDeviceContext bytes hash calculated on the fields requestedOn + DeviceContext. THIS must be sent by the agent and will be recorded on the backend and used for future verification. agentDID string this is the DID of the agent <p></p>"},{"location":"api/grpc/platform-internals/#requestagentregistrationres","title":"RequestAgentRegistrationRes","text":"<p>RequestAgentRegistrationRes is the response from RequestAgentRegistration</p> Field Type Label Description result bool True if successfully completed the requested of registration else false. <p></p>"},{"location":"api/grpc/platform-internals/#sendreq","title":"SendReq","text":"Field Type Label Description agentDID string mawaData deviceData.MaWaRouteDataStruct specific to MaWaRoute deviceData deviceData.DeviceData this is the generic structure for users deploying Scurid Edge Agent and using its data transfer capabilities. This is could JSON string for now. Need more work to create more customer specific structure csr certificate.v1.CSR"},{"location":"api/grpc/platform-internals/#sendres","title":"SendRes","text":"Field Type Label Description res bool"},{"location":"api/grpc/platform-internals/#sendwithuserdefinedfieldsreq","title":"SendWithUserDefinedFieldsReq","text":"Field Type Label Description row string signature string timestamp int64 agentDID string"},{"location":"api/grpc/platform-internals/#sendwithuserdefinedfieldsres","title":"SendWithUserDefinedFieldsRes","text":"Field Type Label Description success bool"},{"location":"api/grpc/platform-internals/#statuscheckreq","title":"StatusCheckReq","text":"<p>StatusCheckReq used for checking the agent status</p> Field Type Label Description agentDID string this is the DID of the agent <p></p>"},{"location":"api/grpc/platform-internals/#statuscheckres","title":"StatusCheckRes","text":"Field Type Label Description key string this is the key returned by the backend, that must be used by the identities to relate themselves to an agent status string to enable decision making on the edge agent otherPlatformIntegrationRes OtherPlatformIntegrationRes"},{"location":"api/grpc/platform-internals/#storeagentregionconfigreq","title":"StoreAgentRegionConfigReq","text":"Field Type Label Description data RegionConfigForAgent data to store the information for agent's config enableStorage bool this controls if the agent should use the config to write to the datastore"},{"location":"api/grpc/platform-internals/#storeagentregionconfigres","title":"StoreAgentRegionConfigRes","text":"Field Type Label Description status bool default is false, when stores successfully true is returned"},{"location":"api/grpc/platform-internals/#storeregionconfigreq","title":"StoreRegionConfigReq","text":"Field Type Label Description identity string use the platformDID id int64 use the value defined from the DataStoreRegion.ID"},{"location":"api/grpc/platform-internals/#storeregionconfigres","title":"StoreRegionConfigRes","text":"Field Type Label Description status bool default is false, if successful True is returned"},{"location":"api/grpc/platform-internals/#thingworx","title":"ThingWorx","text":"Field Type Label Description RequestOnboard bool AppKey string"},{"location":"api/grpc/platform-internals/#agentmanagement","title":"AgentManagement","text":"<p>AgentManagement contains endpoint that are needed to manage internal communication between the Agents and the Platform This will be used to perform internal tasks, that can be offload from users to simplify agent to platform workings</p> Method Name Request Type Response Type Description RequestAgentRegistration RequestAgentRegistrationReq RequestAgentRegistrationRes Requests the registration of an agent StatusCheck StatusCheckReq StatusCheckRes StatusCheck provides update if the identity for the agent is approved if approved agent will receive a key GetAgentConfig GetAgentConfigReq GetAgentConfigRes <p></p>"},{"location":"api/grpc/platform-internals/#customsender","title":"CustomSender","text":"Method Name Request Type Response Type Description SendWithUserDefinedFields SendWithUserDefinedFieldsReq stream SendWithUserDefinedFieldsRes"},{"location":"api/grpc/platform-internals/#datastorage","title":"DataStorage","text":"<p>Allows setting up global database store for the Scurid Backend which enables Scurid Edge agents to store device data</p> Method Name Request Type Response Type Description GetCloudProviders GetCloudProvidersReq GetCloudProvidersRes GetCloudProviders fetches list of currently supported cloud providers this API is to deliver default configuration offered by Scurid GetDBRegionList GetDBRegionListReq GetDBRegionListRes stream GetDBRegionList provides list of global region list where distributed data storage can be setup this API is to deliver default configuration offered by Scurid StoreRegionConfig StoreRegionConfigReq StoreRegionConfigRes StoreRegionConfig stores region information as selected by the user this helps build region configuration for the end users GetUserRegionConfig GetUserRegionConfigReq GetUserRegionConfigRes GetUserRegionConfig fetches list of regions configured for the user this API must be used after the initial on-boarding is finished using StoreRegionConfig this helps build region configuration for the end user scope StoreAgentRegionConfig StoreAgentRegionConfigReq StoreAgentRegionConfigRes StoreAgentRegionConfig stores agent's region configuration this API must be used after the initial user region setup is complete via StoreRegionConfig GetAgentRegionConfig GetAgentRegionConfigReq GetAgentRegionConfigRes GetAgentRegionConfig fetches list of region configuration for the agent this API must be used after the initial agent setup is complete via StoreAgentRegionConfig CreateCredentials CreateCredentialsReq CreateCredentialsRes CreateCredentials create required username , password, connection string and the database name for the user GetCredentials GetCredentialsReq GetCredentialsRes Fetches the credentials for a given customer GetAgentData .deviceData.GetAgentDataReq .deviceData.GetAgentDataRes stream GetDevicesList returns list of all agent data GetAgentDataStat .deviceData.GetAgentDataStatReq .deviceData.GetAgentDataStatRes GetAgentDataStat returns the number of data that can be successfully verified and dataPoints that couldn't be verified <p></p>"},{"location":"api/grpc/platform-internals/#devicedatamanagement","title":"DeviceDataManagement","text":"<p>DeviceDataManagement set of endpoints to help manage data flow from devices back to Scurid Backend</p> Method Name Request Type Response Type Description Send SendReq stream SendRes stream Send opens bidi stream, between device and the server currently server is only configured to return boolean confirmation. todo extend for more later. SendWithUserDefinedFields SendWithUserDefinedFieldsReq stream SendWithUserDefinedFieldsRes SendWithUserDefinedFields creates client streaming to send array of data set from the Scurid Edge Agent to the Scurid Server"},{"location":"api/grpc/platform-internals/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/platformapi/","title":"Platform APIs Documentation","text":""},{"location":"api/grpc/platformapi/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>platformapi.proto</p> <ul> <li>AddTagsReq</li> <li>AddTagsRes</li> <li>AgentInfoForDID</li> <li>AllDevicesListStruct</li> <li>AssignTagsToIdentityReq</li> <li>AssignTagsToIdentityRes</li> <li>CountriesStruct</li> <li>CreateIdentityReq</li> <li>CreateIdentityRes</li> <li>DownloadFilesReq</li> <li>DownloadFilesRes</li> <li>EmptyRequest</li> <li>FileInfo</li> <li>FileStorePathReq</li> <li>FileStorePathRes</li> <li>GetAllDevicesListReq</li> <li>GetAllDevicesListRes</li> <li>GetCountriesListReq</li> <li>GetCountriesListRes</li> <li>GetDevicePayloadsWithSignatureReq</li> <li>GetDevicePayloadsWithSignatureRes</li> <li>GetDevicePayloadsWithSignatureStruct</li> <li>GetLicenseStatusReq</li> <li>GetLicenseStatusRes</li> <li>GetOnboardingPkgReq</li> <li>GetOnboardingPkgRes</li> <li>GetPendingRequestsListReq</li> <li>GetPendingRequestsListRes</li> <li>GetPlatformDIDReq</li> <li>GetPlatformDIDRes</li> <li>GetRejectedIdentitiesListReq</li> <li>GetRejectedIdentitiesListRes</li> <li>GetTagsReq</li> <li>GetTagsRes</li> <li>GetValidIdentitiesListReq</li> <li>GetValidIdentitiesListRes</li> <li>GetValidIdentityInfoReq</li> <li>GetValidIdentityInfoRes</li> <li>ListIdentitiesUnderATagReq</li> <li>ListIdentitiesUnderATagRes</li> <li>LocalStorageInitReq</li> <li>LocalStorageInitRes</li> <li>NewPlatformUserInfo</li> <li>PendingRequestsStruct</li> <li>PostDeviceDataWithSignatureReq</li> <li>PostDeviceDataWithSignatureRes</li> <li>PostDeviceDataWithSignatureStruct</li> <li>RecordRejectedDIDReq</li> <li>RecordRejectedDIDRes</li> <li>RegisterDeviceDIDReq</li> <li>RegisterDeviceDIDRes</li> <li>RejectedIdentitiesListStruct</li> <li>RemoveTagsReq</li> <li>RemoveTagsRes</li> <li>RequestIdentityStatusReq</li> <li>RequestIdentityStatusRes</li> <li>RequestRegistrationOfDeviceReq</li> <li>RequestRegistrationOfDeviceRes</li> <li>RevokeDeviceDIDReq</li> <li>RevokeDeviceDIDRes</li> <li>SignBytePayloadWithIdentityReq</li> <li>SignBytePayloadWithIdentityRes</li> <li>SignPayloadReq</li> <li>SignPayloadRes</li> <li>TagStruct</li> <li>UploadFilesReq</li> <li>UploadFilesRes</li> <li>ValidIdentitiesListStruct</li> <li>VerifyBytePayloadWithIdentityReq</li> <li>VerifyBytePayloadWithIdentityRes</li> <li>VerifyDeviceDIDReq</li> <li>VerifyDeviceDIDRes</li> <li>VerifySignatureReq</li> <li> <p>VerifySignatureRes</p> </li> <li> <p>ScuridPlatformAgentAPI</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/platformapi/#platformapiproto","title":"platformapi.proto","text":""},{"location":"api/grpc/platformapi/#addtagsreq","title":"AddTagsReq","text":"Field Type Label Description tags TagStruct repeated one or more tags to be created in the system"},{"location":"api/grpc/platformapi/#addtagsres","title":"AddTagsRes","text":"Field Type Label Description result bool boolean result, True if all gets created else false"},{"location":"api/grpc/platformapi/#agentinfofordid","title":"AgentInfoForDID","text":"Field Type Label Description agentDID string if device DID to be bound to an agent statusKey string to be delivered from the backend"},{"location":"api/grpc/platformapi/#alldevicesliststruct","title":"AllDevicesListStruct","text":"Field Type Label Description did string deviceName string human readable name of the device statusOfDID string versionInfo string createdOn int64"},{"location":"api/grpc/platformapi/#assigntagstoidentityreq","title":"AssignTagsToIdentityReq","text":"Field Type Label Description tags TagStruct repeated did string device identities to be tagged with"},{"location":"api/grpc/platformapi/#assigntagstoidentityres","title":"AssignTagsToIdentityRes","text":"Field Type Label Description result bool true if assignment of tags to identity works; else false; default is false"},{"location":"api/grpc/platformapi/#countriesstruct","title":"CountriesStruct","text":"Field Type Label Description name string"},{"location":"api/grpc/platformapi/#createidentityreq","title":"CreateIdentityReq","text":"Field Type Label Description customerInfo NewPlatformUserInfo"},{"location":"api/grpc/platformapi/#createidentityres","title":"CreateIdentityRes","text":"Field Type Label Description did string"},{"location":"api/grpc/platformapi/#downloadfilesreq","title":"DownloadFilesReq","text":"Field Type Label Description deviceIdentity string device's identity"},{"location":"api/grpc/platformapi/#downloadfilesres","title":"DownloadFilesRes","text":"Field Type Label Description info FileInfo chunkData bytes"},{"location":"api/grpc/platformapi/#emptyrequest","title":"EmptyRequest","text":""},{"location":"api/grpc/platformapi/#fileinfo","title":"FileInfo","text":"Field Type Label Description deviceIdentity string fileId string fileType string"},{"location":"api/grpc/platformapi/#filestorepathreq","title":"FileStorePathReq","text":"Field Type Label Description deviceIdentity string device DID path string folder"},{"location":"api/grpc/platformapi/#filestorepathres","title":"FileStorePathRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/platformapi/#getalldeviceslistreq","title":"GetAllDevicesListReq","text":"<p>empty request</p> <p></p>"},{"location":"api/grpc/platformapi/#getalldeviceslistres","title":"GetAllDevicesListRes","text":"Field Type Label Description rows AllDevicesListStruct repeated"},{"location":"api/grpc/platformapi/#getcountrieslistreq","title":"GetCountriesListReq","text":"<p>left blank intentionally</p> <p></p>"},{"location":"api/grpc/platformapi/#getcountrieslistres","title":"GetCountriesListRes","text":"Field Type Label Description data CountriesStruct repeated"},{"location":"api/grpc/platformapi/#getdevicepayloadswithsignaturereq","title":"GetDevicePayloadsWithSignatureReq","text":"Field Type Label Description deviceDid string deviceName string if deviceName is used all payloads are returned from that device, it may have used multiple DIDs"},{"location":"api/grpc/platformapi/#getdevicepayloadswithsignatureres","title":"GetDevicePayloadsWithSignatureRes","text":"Field Type Label Description rows GetDevicePayloadsWithSignatureStruct repeated"},{"location":"api/grpc/platformapi/#getdevicepayloadswithsignaturestruct","title":"GetDevicePayloadsWithSignatureStruct","text":"Field Type Label Description deviceDID string deviceName string dataTimestamp int32 payload string signature string isValid bool"},{"location":"api/grpc/platformapi/#getlicensestatusreq","title":"GetLicenseStatusReq","text":"<p>ScuridPlatformAgentAPI section</p> <p>left blank intentionally</p> <p></p>"},{"location":"api/grpc/platformapi/#getlicensestatusres","title":"GetLicenseStatusRes","text":"Field Type Label Description licStatus bool false if status not active; true otherwise licType string type of the license small, developer etc. validFrom int64 valid from timestamp validUntil int64 valid until timestamp"},{"location":"api/grpc/platformapi/#getonboardingpkgreq","title":"GetOnboardingPkgReq","text":"Field Type Label Description identity string device's public identity"},{"location":"api/grpc/platformapi/#getonboardingpkgres","title":"GetOnboardingPkgRes","text":"Field Type Label Description pkg1 string transfers payload in string, any data structure pkg2 bytes transfers payload in bytes, any data structure"},{"location":"api/grpc/platformapi/#getpendingrequestslistreq","title":"GetPendingRequestsListReq","text":"<p>empty request</p> <p></p>"},{"location":"api/grpc/platformapi/#getpendingrequestslistres","title":"GetPendingRequestsListRes","text":"Field Type Label Description rows PendingRequestsStruct repeated"},{"location":"api/grpc/platformapi/#getplatformdidreq","title":"GetPlatformDIDReq","text":"<p>empty request</p> <p></p>"},{"location":"api/grpc/platformapi/#getplatformdidres","title":"GetPlatformDIDRes","text":"Field Type Label Description platform_did string status string"},{"location":"api/grpc/platformapi/#getrejectedidentitieslistreq","title":"GetRejectedIdentitiesListReq","text":"<p>empty request</p> <p></p>"},{"location":"api/grpc/platformapi/#getrejectedidentitieslistres","title":"GetRejectedIdentitiesListRes","text":"Field Type Label Description rows RejectedIdentitiesListStruct repeated"},{"location":"api/grpc/platformapi/#gettagsreq","title":"GetTagsReq","text":"<p>left empty</p> <p></p>"},{"location":"api/grpc/platformapi/#gettagsres","title":"GetTagsRes","text":"Field Type Label Description tag TagStruct"},{"location":"api/grpc/platformapi/#getvalididentitieslistreq","title":"GetValidIdentitiesListReq","text":"<p>empty request</p> <p></p>"},{"location":"api/grpc/platformapi/#getvalididentitieslistres","title":"GetValidIdentitiesListRes","text":"Field Type Label Description rows ValidIdentitiesListStruct repeated"},{"location":"api/grpc/platformapi/#getvalididentityinforeq","title":"GetValidIdentityInfoReq","text":"Field Type Label Description did string"},{"location":"api/grpc/platformapi/#getvalididentityinfores","title":"GetValidIdentityInfoRes","text":"Field Type Label Description vInfo string edge agent version used for creating DID lastVerifiedOn int64 created_on int64 device_name string isLocal bool if checked identities are not registered on DLT but only local database path string device pkg file store on the client side deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity agentInfoForDID AgentInfoForDID if there is an agent to which this identity belongs"},{"location":"api/grpc/platformapi/#listidentitiesunderatagreq","title":"ListIdentitiesUnderATagReq","text":"Field Type Label Description tag TagStruct"},{"location":"api/grpc/platformapi/#listidentitiesunderatagres","title":"ListIdentitiesUnderATagRes","text":"Field Type Label Description did string"},{"location":"api/grpc/platformapi/#localstorageinitreq","title":"LocalStorageInitReq","text":"Field Type Label Description storagePath string"},{"location":"api/grpc/platformapi/#localstorageinitres","title":"LocalStorageInitRes","text":"Field Type Label Description status bool try to return actual error from the OS if any, a success message"},{"location":"api/grpc/platformapi/#newplatformuserinfo","title":"NewPlatformUserInfo","text":"<p>struct to be attached to the Platform's DID registration</p> Field Type Label Description firstName string lastName string email string country string isEnterpriseUser bool enterpriseFullName string did string emailRegistrationCode string this is the code sent to the user's email for verification <p></p>"},{"location":"api/grpc/platformapi/#pendingrequestsstruct","title":"PendingRequestsStruct","text":"Field Type Label Description did string requestTimestamp int64 versionInfo string created_on int64 device_name string isLocal bool deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity agentInfoForDID AgentInfoForDID if there is an agent to which this identity belongs"},{"location":"api/grpc/platformapi/#postdevicedatawithsignaturereq","title":"PostDeviceDataWithSignatureReq","text":"Field Type Label Description dataSet PostDeviceDataWithSignatureStruct repeated"},{"location":"api/grpc/platformapi/#postdevicedatawithsignatureres","title":"PostDeviceDataWithSignatureRes","text":"Field Type Label Description status bool"},{"location":"api/grpc/platformapi/#postdevicedatawithsignaturestruct","title":"PostDeviceDataWithSignatureStruct","text":"Field Type Label Description deviceDID string deviceName string dataTimestamp int32 payload string signature string"},{"location":"api/grpc/platformapi/#recordrejecteddidreq","title":"RecordRejectedDIDReq","text":"Field Type Label Description did string rejectedOn int64 timestamp of rejection // UTC isLocal bool defaults to false, if the identity was approved previously use that state"},{"location":"api/grpc/platformapi/#recordrejecteddidres","title":"RecordRejectedDIDRes","text":"Field Type Label Description status bool"},{"location":"api/grpc/platformapi/#registerdevicedidreq","title":"RegisterDeviceDIDReq","text":"Field Type Label Description deviceDid string platformDid string platform did isLocal bool if checked identites are not registered on DLT but only local database"},{"location":"api/grpc/platformapi/#registerdevicedidres","title":"RegisterDeviceDIDRes","text":"Field Type Label Description status bool"},{"location":"api/grpc/platformapi/#rejectedidentitiesliststruct","title":"RejectedIdentitiesListStruct","text":"Field Type Label Description did string vInfo string edge agent version used for creating DID rejectionTimestamp int64 revokedOn int64 created_on int64 device_name string isLocal bool if checked identities are not registered on DLT but only local database deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity agentInfoForDID AgentInfoForDID if there is an agent to which this identity belongs"},{"location":"api/grpc/platformapi/#removetagsreq","title":"RemoveTagsReq","text":"Field Type Label Description tags TagStruct repeated tags to be deleted from the system did string this generally the device identity"},{"location":"api/grpc/platformapi/#removetagsres","title":"RemoveTagsRes","text":"Field Type Label Description result bool boolean result, True if all gets deleted else false"},{"location":"api/grpc/platformapi/#requestidentitystatusreq","title":"RequestIdentityStatusReq","text":"Field Type Label Description deviceDID string"},{"location":"api/grpc/platformapi/#requestidentitystatusres","title":"RequestIdentityStatusRes","text":"<p>response is one of the following</p> Field Type Label Description status string <p></p>"},{"location":"api/grpc/platformapi/#requestregistrationofdevicereq","title":"RequestRegistrationOfDeviceReq","text":"Field Type Label Description deviceDID string requestedOn int64 UTC timestamp of request from device, this value MUST come from device vInfo string edge agent version used for generating DID device_name string name with which customer, user identifies it uniquely, this could also be a name in the IIoT Platform deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity signatureOnDeviceContext bytes hash calculated on the fields requestedOn + deviceDID. THIS must be sent by the agent and will be recorded on the backend and used for future verification. agentInfoForDID AgentInfoForDID if there is an agent to which this identity belongs"},{"location":"api/grpc/platformapi/#requestregistrationofdeviceres","title":"RequestRegistrationOfDeviceRes","text":"<p>this only provides a confirmation if request has been successfully received. Whether it's approved or rejected, will be handled by respective service This info will be added to the Platform Agent's local storage</p> Field Type Label Description status bool only returns confirmation that the request has been received <p></p>"},{"location":"api/grpc/platformapi/#revokedevicedidreq","title":"RevokeDeviceDIDReq","text":"Field Type Label Description device_did string platform_did string"},{"location":"api/grpc/platformapi/#revokedevicedidres","title":"RevokeDeviceDIDRes","text":"Field Type Label Description status bool"},{"location":"api/grpc/platformapi/#signbytepayloadwithidentityreq","title":"SignBytePayloadWithIdentityReq","text":"Field Type Label Description payload bytes array if bytes to be signed did string identity i.e. did:scurid:XXXXXXXXXXX ; NOTE identity is case sensitive"},{"location":"api/grpc/platformapi/#signbytepayloadwithidentityres","title":"SignBytePayloadWithIdentityRes","text":"Field Type Label Description signature string generated signature"},{"location":"api/grpc/platformapi/#signpayloadreq","title":"SignPayloadReq","text":"Field Type Label Description payload string did string"},{"location":"api/grpc/platformapi/#signpayloadres","title":"SignPayloadRes","text":"Field Type Label Description signature string"},{"location":"api/grpc/platformapi/#tagstruct","title":"TagStruct","text":"Field Type Label Description tagName string"},{"location":"api/grpc/platformapi/#uploadfilesreq","title":"UploadFilesReq","text":"Field Type Label Description info FileInfo chunkData bytes"},{"location":"api/grpc/platformapi/#uploadfilesres","title":"UploadFilesRes","text":"Field Type Label Description result bool true if successfully transferred the files."},{"location":"api/grpc/platformapi/#valididentitiesliststruct","title":"ValidIdentitiesListStruct","text":"Field Type Label Description did string vInfo string edge agent version used for creating DID created_on int64 last_verified_on int64 device_name string isLocal bool if checked identities are not registered on DLT but only local database path string device pkg file store on the client side deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity agentInfoForDID AgentInfoForDID if there is an agent to which this identity belongs"},{"location":"api/grpc/platformapi/#verifybytepayloadwithidentityreq","title":"VerifyBytePayloadWithIdentityReq","text":"Field Type Label Description signature string payload bytes did string identity i.e. did:scurid:XXXXXXXXXXX ; NOTE: identity is case sensitive"},{"location":"api/grpc/platformapi/#verifybytepayloadwithidentityres","title":"VerifyBytePayloadWithIdentityRes","text":"Field Type Label Description isValid bool true if valid, else false (Defaults to False)"},{"location":"api/grpc/platformapi/#verifydevicedidreq","title":"VerifyDeviceDIDReq","text":"Field Type Label Description platform_did string device_did string"},{"location":"api/grpc/platformapi/#verifydevicedidres","title":"VerifyDeviceDIDRes","text":"Field Type Label Description status bool"},{"location":"api/grpc/platformapi/#verifysignaturereq","title":"VerifySignatureReq","text":"Field Type Label Description signature string payload string did string"},{"location":"api/grpc/platformapi/#verifysignatureres","title":"VerifySignatureRes","text":"Field Type Label Description isValid bool"},{"location":"api/grpc/platformapi/#scuridplatformagentapi","title":"ScuridPlatformAgentAPI","text":"Method Name Request Type Response Type Description GetPendingRequestsList GetPendingRequestsListReq GetPendingRequestsListRes Track requests from new devices to register them on the SSI Service VerifySignature VerifySignatureReq VerifySignatureRes Verify signature of the payload Currently only string payloads are supported CreateIdentity CreateIdentityReq CreateIdentityRes Primarily to be used for DID Generation of the platform to be used for registering platform application for that customer This should make an internal call to the Scurid SSI Service and store the DID value in local storage in encrypted wallet SignPayload SignPayloadReq SignPayloadRes Sign a given payload with platform's DID GetRejectedIdentitiesList GetRejectedIdentitiesListReq GetRejectedIdentitiesListRes As platform agent must track every incoming request for DID registration in local DB storage, this service returns the list of all the DIDs that were rejected by the customer to be registered with Scurid SSI Service. This is mainly a bookkeeping service GetValidIdentitiesList GetValidIdentitiesListReq GetValidIdentitiesListRes Fetches the list of all the DIDs that were successfully registered in Scurid SSI Service, this list must be kept internally fresh by the platform's internal service GetValidIdentityInfo GetValidIdentityInfoReq GetValidIdentityInfoRes Fetches details available on a given identity in local DB storage, data on this identity must be kept fresh by internal services RecordRejectedDID RecordRejectedDIDReq RecordRejectedDIDRes Identities returned by GetPendingRequestsList if they are rejected by the customer from the flutter app, they of course MUST not be registered with Scurid SSI Service, but at the same time should be recorded in the local DB RequestRegistrationOfDevice RequestRegistrationOfDeviceReq RequestRegistrationOfDeviceRes this endpoint is for devices to call Platform Agent to register them Normally will be used by devices wanting to registering for the first time, or if a new DID has been generated on an existing device RequestIdentityStatus RequestIdentityStatusReq RequestIdentityStatusRes This endpoint is primarily meant for devices to get validation from Platform Application if their DID was registered on the blockchain LocalStorageInit LocalStorageInitReq LocalStorageInitRes To be called from desktop app for getting the path where DB should be initialized GetAllDevicesList GetAllDevicesListReq GetAllDevicesListRes A call to local storage to get list of all available device DIDs VerifyDeviceDID VerifyDeviceDIDReq VerifyDeviceDIDRes Wraps the call for SSI Service API with same name VerifyDeviceDID RevokeDeviceDID RevokeDeviceDIDReq RevokeDeviceDIDRes Wraps the call for SSI Service API with same name RevokeDeviceDID RegisterDeviceDID RegisterDeviceDIDReq RegisterDeviceDIDRes Wraps the call for SSI Service API with same name RegisterDeviceDID GetPlatformDID GetPlatformDIDReq GetPlatformDIDRes To provide Platform DID from the local gRPC platform storage GetDevicePayloadsWithSignature GetDevicePayloadsWithSignatureReq GetDevicePayloadsWithSignatureRes Provides device's data with signature for each payload returned rows have boolean confirmation attached to each row True denotes that the device's payload has valid signature, false denotes otherwise PostDeviceDataWithSignature PostDeviceDataWithSignatureReq PostDeviceDataWithSignatureRes PostDeviceDataWithSignature to be called from edge devices to post / send their device data with signature to Platform GetCountriesList GetCountriesListReq GetCountriesListRes Provides list of countries GetLicenseStatus GetLicenseStatusReq GetLicenseStatusRes SignBytePayloadWithIdentity SignBytePayloadWithIdentityReq SignBytePayloadWithIdentityRes Signs a byte array payload with identity VerifyBytePayloadWithIdentity VerifyBytePayloadWithIdentityReq VerifyBytePayloadWithIdentityRes Verifies a byte array payload with identity AddTags AddTagsReq AddTagsRes Adds tags for categorization of the identities RemoveTags RemoveTagsReq RemoveTagsRes Removes existing tags from the identity GetTags GetTagsReq GetTagsRes stream Get existing tags AssignTagsToIdentity AssignTagsToIdentityReq AssignTagsToIdentityRes AssignTagsToIdentity assign one more tags to an identity ListIdentitiesUnderATag ListIdentitiesUnderATagReq ListIdentitiesUnderATagRes stream Lists all the identities assigned to a Tag UploadFiles UploadFilesReq stream UploadFilesRes Used for uploading files to the server DownloadFiles DownloadFilesReq DownloadFilesRes stream Used for downloading device pkgs FileStorePath FileStorePathReq FileStorePathRes FileStorePath provides path for the device files"},{"location":"api/grpc/platformapi/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/platformapiv2/","title":"Platform API v2 Documentation","text":""},{"location":"api/grpc/platformapiv2/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>platformapiv2.proto</p> <ul> <li>AgentsStruct</li> <li>ConfigureAgentReq</li> <li>ConfigureAgentRes</li> <li>CreateUserReq</li> <li>CreateUserRes</li> <li>DeleteUserReq</li> <li>DeleteUserRes</li> <li>DownloadReleaseZipReq</li> <li>DownloadReleaseZipRes</li> <li>DownloadReq</li> <li>DownloadRes</li> <li>GetAgentInfoReq</li> <li>GetAgentInfoRes</li> <li>GetAgentsListReq</li> <li>GetAgentsListRes</li> <li>GetAppLogsReq</li> <li>GetAppLogsRes</li> <li>GetAppOnboardingInfoReq</li> <li>GetAppOnboardingInfoRes</li> <li>GetIDSettingsReq</li> <li>GetIDSettingsRes</li> <li>GetIdentityInfoReq</li> <li>GetIdentityInfoRes</li> <li>GetIdentityLogReq</li> <li>GetIdentityLogRes</li> <li>GetIntegrationConfigReq</li> <li>GetIntegrationConfigRes</li> <li>GetReleasesReq</li> <li>GetReleasesRes</li> <li>GetUserInfoReq</li> <li>GetUserInfoRes</li> <li>GetUsersReq</li> <li>GetUsersRes</li> <li>InviteUserReq</li> <li>InviteUserRes</li> <li>RecordAppLogsReq</li> <li>RecordAppLogsRes</li> <li>RegisterAgentReq</li> <li>RegisterAgentRes</li> <li>RequestRegistrationCodeReq</li> <li>RequestRegistrationCodeRes</li> <li>ResetPasswordReq</li> <li>ResetPasswordRes</li> <li>RevokeAgentReq</li> <li>RevokeAgentRes</li> <li>ScuridAppOnboardingInfo</li> <li>SetIDSettingsReq</li> <li>SetIDSettingsRes</li> <li>StoreAppOnboardingInfoReq</li> <li>StoreAppOnboardingInfoRes</li> <li>StoreIntegrationConfigReq</li> <li>StoreIntegrationConfigRes</li> <li>UpdateUserPasswordReq</li> <li>UpdateUserPasswordRes</li> <li>VerifyAgentReq</li> <li> <p>VerifyAgentRes</p> </li> <li> <p>Platform</p> </li> <li>Subsystems</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/platformapiv2/#platformapiv2proto","title":"platformapiv2.proto","text":""},{"location":"api/grpc/platformapiv2/#agentsstruct","title":"AgentsStruct","text":"Field Type Label Description agentVersion string version of the Scurid Edge Agent requestedOn int64 date on which Scurid backend received agent's req for reg. deviceContext deviceContext.DeviceContext DeviceContext from the hardware on which the agent is running SignatureOnDeviceContext bytes hashed value generated on structure DeviceContext + Requested on + ApprovedOn. THIS is also used as the key which will be delivered to status string current status of the Agent, refer to models/v1/status.go name string alias defined for the agent by the user, if none create one for the user revokedOn int64 RevokedOn timestamp for agent's identity revocation devices string repeated this is the list of identities linked to this agent approvedOn int64 Unix time stamp on which agent's approved. If client does not provide this, server timestamp will be attached. agentIdentity string agent's identity platformIdentity string platform's identity approvalKey bytes post approval this key is returned to the agent for reference DeviceContext + Requested on + ApprovedOn + Agent's DID. THIS is also used as the key which will be delivered to verifiedOn int64 Unix timestamp for verification integrationDetails integration.IntegrationDetails default is nil, if agent is configured with any integration, this will be populated signatureOnIntegration signature.Signature signature of the Scurid Server's identity on the integration details. This is used to verify the integrity of the integration details. storageSchemaMetadata storageSchemaMetadata.StoreSchemaMetadataRequest default is nil, if agent is configured with any storage schema, this will be populated storageTableName string"},{"location":"api/grpc/platformapiv2/#configureagentreq","title":"ConfigureAgentReq","text":"Field Type Label Description agentID string AgentID is the DID of the agent to be configured integrationDetails integration.IntegrationDetails IntegrationDetails is the configuration to be applied to the agent agentAlias string agentAlias custom alias for the agent storeSchemaMetadataRequest storageSchemaMetadata.StoreSchemaMetadataRequest defines the storage schema structure applied to the agent data storage storageTableName string defines the storage table name for the agent data storage this will be used for creating the database table name; in reference to the RDBMS storage structure"},{"location":"api/grpc/platformapiv2/#configureagentres","title":"ConfigureAgentRes","text":"Field Type Label Description status bool Status is the status of the configuration operation"},{"location":"api/grpc/platformapiv2/#createuserreq","title":"CreateUserReq","text":"Field Type Label Description user user.v1.User userData user.v1.UserData inviteKey string this is the key that will be used to invite the user, and would have been sent to the user when sending the invite."},{"location":"api/grpc/platformapiv2/#createuserres","title":"CreateUserRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/platformapiv2/#deleteuserreq","title":"DeleteUserReq","text":"Field Type Label Description email string"},{"location":"api/grpc/platformapiv2/#deleteuserres","title":"DeleteUserRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/platformapiv2/#downloadreleasezipreq","title":"DownloadReleaseZipReq","text":"Field Type Label Description version string"},{"location":"api/grpc/platformapiv2/#downloadreleasezipres","title":"DownloadReleaseZipRes","text":"Field Type Label Description file release.CompleteReleaseZip"},{"location":"api/grpc/platformapiv2/#downloadreq","title":"DownloadReq","text":"Field Type Label Description asset release.Asset repeated"},{"location":"api/grpc/platformapiv2/#downloadres","title":"DownloadRes","text":"Field Type Label Description version release.DownloadVersion"},{"location":"api/grpc/platformapiv2/#getagentinforeq","title":"GetAgentInfoReq","text":"Field Type Label Description agentId string agent's DID information"},{"location":"api/grpc/platformapiv2/#getagentinfores","title":"GetAgentInfoRes","text":"Field Type Label Description agentInfo AgentsStruct uses defined AgentsStruct"},{"location":"api/grpc/platformapiv2/#getagentslistreq","title":"GetAgentsListReq","text":"<p>GetAgentsListReq</p> <p>intentionally left empty</p> <p></p>"},{"location":"api/grpc/platformapiv2/#getagentslistres","title":"GetAgentsListRes","text":"Field Type Label Description list AgentsStruct repeated array of all the agents along with their details"},{"location":"api/grpc/platformapiv2/#getapplogsreq","title":"GetAppLogsReq","text":"Field Type Label Description range log.LogRange"},{"location":"api/grpc/platformapiv2/#getapplogsres","title":"GetAppLogsRes","text":"Field Type Label Description log log.AppLog returns log structure"},{"location":"api/grpc/platformapiv2/#getapponboardinginforeq","title":"GetAppOnboardingInfoReq","text":"Field Type Label Description platformIdentity string"},{"location":"api/grpc/platformapiv2/#getapponboardinginfores","title":"GetAppOnboardingInfoRes","text":"Field Type Label Description onboardingInfo ScuridAppOnboardingInfo"},{"location":"api/grpc/platformapiv2/#getidsettingsreq","title":"GetIDSettingsReq","text":"<p>left empty intentionally</p> <p></p>"},{"location":"api/grpc/platformapiv2/#getidsettingsres","title":"GetIDSettingsRes","text":"Field Type Label Description autoApproveDeviceID bool if enabled, new incoming device identities (which usually end up in pending) belonging to existing approved and valid agents will be automatically approved; default is false"},{"location":"api/grpc/platformapiv2/#getidentityinforeq","title":"GetIdentityInfoReq","text":"<p>request message for GetIdentityInfo</p> Field Type Label Description did string identity in the format did:scurid:&lt;publicKey&gt; <p></p>"},{"location":"api/grpc/platformapiv2/#getidentityinfores","title":"GetIdentityInfoRes","text":"<p>response message for GetIdentityInfo</p> Field Type Label Description vInfo string edge agent version used for creating DID lastVerifiedOn int64 Unix timestamp when an identity was last verified with the SSI Service createdOn int64 Unix timestamp when identity was created rejectedOn int64 Unix timestamp when identity was rejected deviceName string alias name for the device, defined by the user or system isLocal bool if checked identities are not registered on DLT but only local database path string device pkg file store for staging client files tags string repeated provides list of tags attached the identity pendingSince int64 Unix timestamp since identity has been pending for action deviceContext deviceContext.DeviceContext helps to onboard and bind a device to an identity <p></p>"},{"location":"api/grpc/platformapiv2/#getidentitylogreq","title":"GetIdentityLogReq","text":"Field Type Label Description range log.LogRange"},{"location":"api/grpc/platformapiv2/#getidentitylogres","title":"GetIdentityLogRes","text":"Field Type Label Description log log.IdentityLog"},{"location":"api/grpc/platformapiv2/#getintegrationconfigreq","title":"GetIntegrationConfigReq","text":"<p>left empty</p> <p></p>"},{"location":"api/grpc/platformapiv2/#getintegrationconfigres","title":"GetIntegrationConfigRes","text":"Field Type Label Description thingworx integration.ThingWorx hawkbit integration.Hawkbit azure integration.Azure"},{"location":"api/grpc/platformapiv2/#getreleasesreq","title":"GetReleasesReq","text":"Field Type Label Description timestamp google.protobuf.Timestamp use this to filter the releases; field is optional version google.protobuf.StringValue use this to filter the releases; if not provided, field is optional"},{"location":"api/grpc/platformapiv2/#getreleasesres","title":"GetReleasesRes","text":"Field Type Label Description list release.ReleaseStruct repeated"},{"location":"api/grpc/platformapiv2/#getuserinforeq","title":"GetUserInfoReq","text":"Field Type Label Description email string"},{"location":"api/grpc/platformapiv2/#getuserinfores","title":"GetUserInfoRes","text":"Field Type Label Description userData user.v1.UserData userOperation user.v1.UserOperation role user.v1.Role inviteKey string this is the key that will be used to invite the user, and would have been sent to the user when sending the invite."},{"location":"api/grpc/platformapiv2/#getusersreq","title":"GetUsersReq","text":"<p>left empty</p> <p></p>"},{"location":"api/grpc/platformapiv2/#getusersres","title":"GetUsersRes","text":"Field Type Label Description usersList string repeated"},{"location":"api/grpc/platformapiv2/#inviteuserreq","title":"InviteUserReq","text":"Field Type Label Description userInvite user.v1.UserInvite"},{"location":"api/grpc/platformapiv2/#inviteuserres","title":"InviteUserRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/platformapiv2/#recordapplogsreq","title":"RecordAppLogsReq","text":"Field Type Label Description log log.AppLog app log structure"},{"location":"api/grpc/platformapiv2/#recordapplogsres","title":"RecordAppLogsRes","text":"Field Type Label Description res bool"},{"location":"api/grpc/platformapiv2/#registeragentreq","title":"RegisterAgentReq","text":"Field Type Label Description agentDID string this is the identity of the agent, auto generated platformDID string this is the platform's identity generated once during user onboarding name string optional, an alias for the agent approvedOn int64 Unix timestamp, if client won't send any server will assign current timestamp"},{"location":"api/grpc/platformapiv2/#registeragentres","title":"RegisterAgentRes","text":"Field Type Label Description result bool true if operation is successful, else false along with error if any"},{"location":"api/grpc/platformapiv2/#requestregistrationcodereq","title":"RequestRegistrationCodeReq","text":"Field Type Label Description email string"},{"location":"api/grpc/platformapiv2/#requestregistrationcoderes","title":"RequestRegistrationCodeRes","text":"Field Type Label Description result bool if a valid email was received server will send a code and return here true; else false"},{"location":"api/grpc/platformapiv2/#resetpasswordreq","title":"ResetPasswordReq","text":"Field Type Label Description email string"},{"location":"api/grpc/platformapiv2/#resetpasswordres","title":"ResetPasswordRes","text":"Field Type Label Description result bool if a valid email was received server will send a code and return here true; else false"},{"location":"api/grpc/platformapiv2/#revokeagentreq","title":"RevokeAgentReq","text":"Field Type Label Description agentDID string this is the identity of the agent, auto generated platformDID string this is the platform's identity generated once during user onboarding name string optional, an alias for the agent revokedOn int64 Unix timestamp, if client won't send any server will assign current timestamp"},{"location":"api/grpc/platformapiv2/#revokeagentres","title":"RevokeAgentRes","text":"Field Type Label Description result bool true if operation is successful, else false along with error if any"},{"location":"api/grpc/platformapiv2/#scuridapponboardinginfo","title":"ScuridAppOnboardingInfo","text":"Field Type Label Description onboardingInfo string this must be a json formatted string"},{"location":"api/grpc/platformapiv2/#setidsettingsreq","title":"SetIDSettingsReq","text":"Field Type Label Description autoApproveDeviceID bool if enabled, new incoming device identities (which usually end up in pending) belonging to existing approved and valid agents will be automatically approved; default is false"},{"location":"api/grpc/platformapiv2/#setidsettingsres","title":"SetIDSettingsRes","text":"<p>SetIDSettingsRes is the response from the backend</p> Field Type Label Description result bool returns true if successful <p></p>"},{"location":"api/grpc/platformapiv2/#storeapponboardinginforeq","title":"StoreAppOnboardingInfoReq","text":"Field Type Label Description platformIdentity string onboardingInfo ScuridAppOnboardingInfo"},{"location":"api/grpc/platformapiv2/#storeapponboardinginfores","title":"StoreAppOnboardingInfoRes","text":"Field Type Label Description result bool"},{"location":"api/grpc/platformapiv2/#storeintegrationconfigreq","title":"StoreIntegrationConfigReq","text":"<p>StoreIntegrationConfigReq send one or all config at once</p> Field Type Label Description thingworx integration.ThingWorx hawkbit integration.Hawkbit azure integration.Azure <p></p>"},{"location":"api/grpc/platformapiv2/#storeintegrationconfigres","title":"StoreIntegrationConfigRes","text":"Field Type Label Description result bool default is false, if successful returns True"},{"location":"api/grpc/platformapiv2/#updateuserpasswordreq","title":"UpdateUserPasswordReq","text":"Field Type Label Description email string code string newPassword bytes"},{"location":"api/grpc/platformapiv2/#updateuserpasswordres","title":"UpdateUserPasswordRes","text":"Field Type Label Description result bool if user was updated successfully return true; else false"},{"location":"api/grpc/platformapiv2/#verifyagentreq","title":"VerifyAgentReq","text":"Field Type Label Description agentDID string this is the identity of the agent, auto generated platformDID string this is the platform's identity generated once during user onboarding"},{"location":"api/grpc/platformapiv2/#verifyagentres","title":"VerifyAgentRes","text":"Field Type Label Description result bool true if status is still approved , else false along with error if any"},{"location":"api/grpc/platformapiv2/#platform","title":"Platform","text":"Method Name Request Type Response Type Description GetIdentityInfo GetIdentityInfoReq GetIdentityInfoRes Fetches details available on a given identity in local DB storage it can be used for any kind of identity i.e.approved, rejected or pending GetIdentityInfo is currently under development do not use // GetAgentsList GetAgentsListReq GetAgentsListRes GetAgentsList returns list of all agents along with their details GetAgentInfo GetAgentInfoReq GetAgentInfoRes GetAgentInfo returns detail about individual agent identity RegisterAgent RegisterAgentReq RegisterAgentRes RegisterAgent approves a pending agent in the system RevokeAgent RevokeAgentReq RevokeAgentRes RevokeAgent revokes an agent's identity VerifyAgent VerifyAgentReq VerifyAgentRes VerifyAgent verifies agent's authenticity against the Scurid SSI service ConfigureAgent ConfigureAgentReq ConfigureAgentRes ConfigureAgent helps modify Scurid Edge Agent behaviour"},{"location":"api/grpc/platformapiv2/#subsystems","title":"Subsystems","text":"<p>Provides configuration possibilities for different components in the system</p> Method Name Request Type Response Type Description GetIDSettings GetIDSettingsReq GetIDSettingsRes GetIDSettings gets currently stored settings about IDs SetIDSettings SetIDSettingsReq SetIDSettingsRes SetIDSettings sets up different settings GetIdentityLog GetIdentityLogReq GetIdentityLogRes stream GetIdentityLog provides list of log recorded on activities performed on identities. This covers both agent and non agent identities. RecordAppLogs RecordAppLogsReq RecordAppLogsRes RecordAppLogs records Scurid App logs GetAppLogs GetAppLogsReq GetAppLogsRes stream GetAppLogs fetches app log persisted as history StoreIntegrationConfig StoreIntegrationConfigReq StoreIntegrationConfigRes Stores Integration configuration in Scurid Server storage This is a global configuration and will be used by all identities GetIntegrationConfig GetIntegrationConfigReq GetIntegrationConfigRes GetIntegrationConfig fetches currently stored integration configuration from Scurid Server This is a global configuration and will be used by all identities StoreAppOnboardingInfo StoreAppOnboardingInfoReq StoreAppOnboardingInfoRes Stores the user onboarding information created GetAppOnboardingInfo GetAppOnboardingInfoReq GetAppOnboardingInfoRes Fetches the user onboarding information created CreateUser CreateUserReq CreateUserRes Creates a new App User in the Scurid Server InviteUser InviteUserReq InviteUserRes Sends invite to a new user GetUsers GetUsersReq GetUsersRes GetUsers returns list of users DeleteUser DeleteUserReq DeleteUserRes DeleteUser deletes a user GetUserInfo GetUserInfoReq GetUserInfoRes GetUserInfo returns user info ResetPassword ResetPasswordReq ResetPasswordRes Resets the password of a user UpdateUserPassword UpdateUserPasswordReq UpdateUserPasswordRes UpdateUserPassword updates the user GetReleases GetReleasesReq GetReleasesRes Get versions list Download DownloadReq DownloadRes stream Called by clients to Download file(s) DownloadReleaseZip DownloadReleaseZipReq DownloadReleaseZipRes stream Request to download a zip file, containing all the files in the release from Edge Agent, Server &amp; App etc. Request only need the version number RequestRegistrationCode RequestRegistrationCodeReq RequestRegistrationCodeRes RequestRegistrationCode generates a registration code for the user Call this API if the code which user has, has already expire or is invalid"},{"location":"api/grpc/platformapiv2/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"api/grpc/signature/","title":"Signature API Documentation","text":""},{"location":"api/grpc/signature/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>signature.proto</p> <ul> <li>Signature</li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"api/grpc/signature/#signatureproto","title":"signature.proto","text":""},{"location":"api/grpc/signature/#signature","title":"Signature","text":"<p>defines standard signature for all messages</p> Field Type Label Description signature bytes Signature of the message utcUnixTimestamp int64 UTC timestamp in nanoseconds; captured at the time of signing"},{"location":"api/grpc/signature/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"app/autonomousDeviceOnboarding/","title":"Autonomous Device and agent setup","text":"<p>Agent framework, as part of the core functionality, enables you to have your devices generate identity and reach out for identity workflow actions.</p>"},{"location":"app/autonomousDeviceOnboarding/#features","title":"Features","text":"<ol> <li>Simplifies tracking of all agents deployed in your IoT network</li> <li>Extends device identity tracking not only to  each device but also to each agent</li> <li>Capabilities to auto-approve an identity when coming from the trusted agents, further simplifying the individual identity workflow</li> </ol>"},{"location":"app/autonomousDeviceOnboarding/#step-1-executing-scurid-edge-agent-on-iot-device","title":"Step 1 - Executing Scurid Edge Agent on IoT device","text":"<ol> <li>Run agent <code>./scuridedgeagent</code> </li> <li>It exposes <code>-syncrate</code> flag <code>./scuridedgeagent -syncrate 90s</code></li> <li><code>-syncrate</code> defines how often the Edge agent will check for the pending agent's status with the Scurid backend</li> <li>Agent will start using <code>-syncrate</code> on agent startup, and continue to reference it until agent's status is confirmed</li> <li>Once completed agent will not use it any further, until restart of the agent, where steps 1.2 to 1.3 will be repeated</li> <li>Post successful run of the agent, it will automatically set up <code>config.yaml</code> at location defined with the flag <code>-store</code> file with a new agent identity, if none created so far, and will attempt to contact the server passed to the agent using <code>-spaaddr</code> flag to inform the server about new agent's identity</li> <li>Post user's review of the identity, depending on the decision (i.e. approved / revoked ) agent will download the approval key which will be appended to <code>config.yaml</code></li> </ol>"},{"location":"app/autonomousDeviceOnboarding/#step-2-agent-workflow-via-scurid-app-or-apis","title":"Step 2 - Agent workflow via Scurid App or APIs","text":"<p>Once the agent is installed and successfully run on an IoT hardware, it will send out on-boarding request which can be reviewed either via <code>Scurid App</code> or <code>Scurid Backend's APIs</code> </p>"},{"location":"app/autonomousDeviceOnboarding/#scurid-app","title":"Scurid App","text":"<ol> <li>Launch the app to review the pending agents </li> <li>Select the agent to review and approve. Notice along with the agent identity - it also sends out the related hardware details  </li> <li>Once approved, agent will be available for use via the approved list </li> </ol>"},{"location":"app/autonomousDeviceOnboarding/#scurid-backends-apis","title":"Scurid backend's APIs","text":"<p>Backend exposes following set of Agent ID related workflow APIs under <code>PlatformAPIv2</code> which can be integered into your own IoT platform or Analytics platform </p>"},{"location":"app/autonomousDeviceOnboarding/#related-apis","title":"Related APIs","text":"<ol> <li> <p><code>GetAgentsList</code> : Provides list of all the agent related identities on the backend server</p> </li> <li> <p><code>GetAgentInfo</code> : Provides an agent\u2019s detailed information</p> </li> <li> <p><code>RegisterAgent</code> : Used  for approving a pending agent identity, Scurid SSI service call is wrapped within to appropriately handle data on the DLT managed under SSI</p> </li> <li> <p><code>RevokeAgent</code>: Revokes access for an agent, this is a global revocation of the agent\u2019s identity, Scurid SSI service call is wrapped within to appropriately handle data on the DLT managed under SSI</p> </li> <li> <p><code>VerifyAgent</code> : Re-verifies an already approved agent identity,Scurid SSI service call is wrapped within to appropriately handle data on the DLT managed under SSI</p> </li> </ol>"},{"location":"app/autonomousDeviceOnboarding/#automating-device-identity","title":"Automating device identity","text":"<p>With agent's setup successfully completed, you can now choose to enable automatic approval of device identities coming from the approved agent. By default, this is disabled - requiring manual approval of the identities. </p> <p>To enable automatic identity approval, enable required configuration in the ID subsystem, which can be accessed via </p>"},{"location":"app/autonomousDeviceOnboarding/#option-1-enable-via-apps-ui","title":"Option 1 : Enable via App's UI","text":"<ol> <li>Navigate to the <code>Settings</code> page </li> <li>Switch to Identities and enable the <code>Auto Approve</code> setting  </li> </ol>"},{"location":"app/autonomousDeviceOnboarding/#option-2-enable-via-backend-apis","title":"Option 2 : Enable via Backend APIs","text":"<ol> <li>API endpoint group named <code>Subsystems</code> which contains two APIs</li> <li><code>GetIDSettings</code> : Allows the caller to get currently configurable settings for the <code>Subsystem</code></li> <li><code>autoApproveDeviceID</code> which enables/disables auto-approve function for the device identities</li> <li>To offer full control to the users, this settings is set to <code>false</code> by default, i.e. users can decide to review each identity despite having an approved agent creating these identities.</li> <li><code>SetIDSettings</code> : Allows the caller to set the desired state for configurable settings like <code>autoApproveDeviceID</code></li> </ol> <p>Once the agent is approved and for the time period <code>autoApproveDeviceID</code> is enabled - all upcoming new identities from the approved agents will be auto approved!</p>"},{"location":"app/file_management/","title":"File Management","text":"<p>Scurid allows you to manage files on the device, including downloading, uploading, and deleting files. The file management APIs are designed to be simple and efficient, allowing you to interact with files on the device seamlessly. Scurid Edge Agent will automatically download files from the server to the device, managed through a synchronization rate.</p> <p>Following options allow you to manage the confiugration for the file management:</p> <ol> <li>Automatic path creation (default is set to <code>false</code>): If the path does not exist, it will be created automatically. This will ensure that the file can be downloaded by the agent on a given path, even if that path does not exist. An error will be logged and visible in the App log, if the path cannot be created.</li> <li>File Persistence (default is set to <code>false</code>): If set to <code>true</code>, the file will be persisted on the Server and agent will constantly synchronize the file with the server. If set to <code>false</code>, the file will be downloaded only once and not synchronized with the server.</li> <li>Download path in agent (<code>required</code>): The path where the file will be downloaded on the agent. </li> <li>File location (<code>required</code>): The location of the file on the device from which files are being uploaded using the Scurid App.</li> </ol> <p>Current limitations</p> <ul> <li>Subfolders under the selected path are not supported. If they need to be transferred, they must be zipped before.</li> <li>Empty files are not supported.</li> </ul>"},{"location":"app/file_management/#uploading-files","title":"Uploading Files","text":"<ol> <li>Navigate to the agent </li> <li>Select the appropriate path needed for the upload </li> <li>As the upload begins, the progress can be tracked both in the logs and also visually in the UI </li> </ol>"},{"location":"app/log_features/","title":"Features","text":"<p>Like any other application, logging is an essential part within Scurid. It is also given special attention when it comes to logging critical operations on the identity, e.g. approving, rejecting, etc. an identity  </p> <p>Logs are delivered right within the app and are stored in the Scurid Backend. In addition to logging critical operations, they are also signed and can be verified on demand to prevent any kind of tampering.</p> <p>Logs are divided into two major categories :</p> <ul> <li>Application (App) log, which is essentially set of operational records of the Scurid Platform App application</li> <li>Identity log, which is specifically recorded as user or as backend automates the identity workflow processing</li> </ul>"},{"location":"app/log_features/#access-app-logs","title":"Access App Logs","text":"<ol> <li>Launch the app, and access the Logs menu from the left </li> <li>Click on the App Log </li> <li>App Logs are categorized under following log levels </li> <li>Log are automatically filtered with moving 24hours window which can be adjusted from the datetime widget </li> <li>Search with free text search bar </li> </ol>"},{"location":"app/log_features/#access-identity-logs","title":"Access Identity Logs","text":"<ol> <li>Click on the Identity option under Logs menu to list identity logs from 24hrs </li> <li>Identity log contains all the identity workflow action performed on the identity. Each of these actions are signed using the Platform identity, which is the unique identity bound to each customer's deployment of Scurid backend. Search through the log using </li> <li>Each page currently limits maximum 100 entries, view more simply by navigating to the next  </li> </ol>"},{"location":"app/logs/","title":"Overview","text":"<p>Like any other application, logging is an essential part within Scurid. It is also given special attention when it comes to logging critical operations on the identity, e.g. approving, rejecting, etc. an identity  </p> <p>Logs are delivered right within the app and are stored in the Scurid Backend. In addition to logging critical operations, they are also signed and can be verified on demand to prevent any kind of tampering.</p> <p>Logs are divided into two major categories :</p> <ul> <li>Application (App) log, which is essentially set of operational records of the Scurid Platform App application</li> <li>Identity log, which is specifically recorded as user or as backend automates the identity workflow processing</li> </ul>"},{"location":"app/logs/#access-app-logs","title":"Access App Logs","text":"<ol> <li>Launch the app, and access the Logs menu from the left </li> <li>Click on the App Log </li> <li>App Logs are categorized under following log levels </li> <li>Log are automatically filtered with moving 24hours window which can be adjusted from the datetime widget </li> </ol>"},{"location":"app/logs/#access-identity-logs","title":"Access Identity Logs","text":"<ol> <li>Launch the app, and access the Logs menu from the left </li> <li>Click on the Identity option under Logs menu to list identity logs from 24hrs </li> <li>Using the date time widget, log range can be adjusted </li> <li>Identity log contains all the identity workflow action performed on the identity. Each of these actions are signed using the Platform identity, which is the unique identity bound to each customer's deployment of Scurid backend.</li> <li>This also means, this makes identity logs tamper evident out of the box, without any special configuration! </li> </ol>"},{"location":"app/update_app_startup_config/","title":"Startup Configuration","text":"<p>You may need to configure or reconfigure the Scurid Desktop App for several reasons, including:</p> <ul> <li>Accessing new features or updates</li> <li>Change in the Scurid Server IP address or port</li> <li>Reinstalling the app with a different Scurid Server IP address or port</li> <li>Accepting a pending user invitation</li> </ul> <p>For this reason, the Scurid Desktop App allows you to configure the Scurid Server IP address and port. This is a one-time configuration that is required only when you first install the app or if you need to change the server settings.</p> <p>Info</p> <p>If you are upgrading from a previous version, app will automatically detect <code>scurid_config</code> file and will remove the old configuration.</p>"},{"location":"app/update_app_startup_config/#to-configure-the-scurid-desktop-app","title":"To Configure the Scurid Desktop App","text":"<ol> <li>Download and launch the Scurid App from https://scurid.com/downloads.</li> <li>Click Sign into an existing server </li> <li>Enter the Scurid Server IP address and port, then click Update </li> <li>Continue with the login process by entering your credentials.</li> </ol>"},{"location":"app/user_group_mgmt/","title":"User Group","text":"<p>The Scurid App now provides an easy way to create user groups and configure custom roles.</p> <ol> <li>Log in to the Scurid App.</li> <li>Navigate to Role Settings in the Settings menu.</li> <li>View the default roles and their permissions. </li> </ol>"},{"location":"app/user_group_mgmt/#creating-a-new-role","title":"Creating a New Role","text":"<ol> <li>To add a new role, click the dropdown and select Add new custom role. </li> <li>Adjust the access rights for the new role as needed.</li> </ol> <p>Info</p> <p>Default roles cannot be deleted.</p>"},{"location":"app/user_group_mgmt/#deleting-a-role","title":"Deleting a Role","text":"<ol> <li>Select the role you want to delete from the dropdown.</li> <li>Click the Delete button. </li> </ol>"},{"location":"app/users/","title":"User Management","text":"<p>Using Scurid Server and App you can create and invite users in your organization to work with you.</p>"},{"location":"app/users/#pre-requisites","title":"Pre-requisites","text":"<p>Ensure that you have successfully installed and configured Scurid Server and App.</p>"},{"location":"app/users/#creating-and-inviting-a-user","title":"Creating and inviting a user","text":"<ol> <li>Open Scurid App and login with your passphrase created during the onboarding process. </li> <li>Click on <code>Settings</code> then <code>Users</code> and click on Add new user. </li> <li>Fill in the required details and click on <code>Invite</code>. </li> <li>The user will receive an email with an invite code valid for 24hrs. If the user fails to complete the invitation process within 24hrs, you can resend the invite code by filling up the invite form.</li> </ol>"},{"location":"app/users/#accepting-an-invite","title":"Accepting an invite","text":"<ol> <li>Download the app from Downloads</li> <li>Launch the app and toggle to <code>Sign into an existing server</code></li> <li>Click on </li> <li>Enter the server and port your were invited to and click on <code>Next</code>. </li> <li>Complete the form, including the invite code you received in your email and click on <code>Next</code>. </li> <li>Once done, app will reload to show the login page. Click on <code>Sign into an existing server</code> and login with your email and password you just created. </li> </ol>"},{"location":"blog/blog-microscurid/","title":"An end-to-end example of how to integrate MicroScurid-C with your STMicrocontroller board.","text":"<p> Author: Reishi Mitani, Software engineer, Intern .</p> <p>This tutorial provides a simplified overview on generating, approving device identity with the microscurid-c library, and approving it using Scurid App.</p>"},{"location":"blog/blog-microscurid/#initial-setup-pre-requisite","title":"Initial setup &amp; pre-requisite","text":"<p>Before starting ensure that one time user on-boarding has been finished with Scurid. See the quickstart guide. </p> <p>Use the example code in the microscurid-c library available here for download.</p>"},{"location":"blog/blog-microscurid/#1-about-the-server-and-microscurid-c-code","title":"1. About the server and microscurid-c code","text":"<p>For an on-premise deployment Scurid app, server and microscurid-c will be needed.</p> <ul> <li>Run the Scurid server binary supported on platforms <code>MacOs</code>, <code>Linux</code>, or <code>Windows</code> . Make sure to have the specific port (in this tutorial, <code>8888</code>) open so that the MCU can make requests to the server. Download the server from here</li> <li>The microscurid-c library currently works on the <code>STM32WB55</code> series. Another adapter to connect to the ethernet may be needed as well. Download the microscurid-c code here</li> <li>The Scurid App will be used for approving the registration requests of identities from the MCU. Download the Scurid App here</li> </ul>"},{"location":"blog/blog-microscurid/#2-preparation-on-the-mcu-configuring-the-network-info","title":"2. Preparation on the MCU : configuring the network info","text":"<p>We will open the example code of the microscurid-c library in the <code>STM32 Cube IDE</code>. Download the STM32 Cube IDE here</p>"},{"location":"blog/blog-microscurid/#1-configure-the-network","title":"1. Configure the network","text":"<p>Before compiling and transferring the example code to our MCU, we first need to configure the network settings. In <code>app_freertos.c</code>, configure the server port and IP address as below.</p> <pre><code>#define BACKEND_SERVER_PORT 8888\n...\nunsigned char BACKEND_SERVER_IP[4] = {192,168,151,128};\n</code></pre> <p>We will also need to configure the subnet mask and gateway server IP address, and whether we want to enable DHCP.</p> <pre><code>static wiz_NetInfo g_net_info = { .mac = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },// MAC address, we fill them with zeros since they are unnecessary for now\n        .ip = { 192, 168, 151, 127 },                    // // IP address, fill in random numbers if using DHCP\n        .sn = { 255, 255, 254, 0 },                     // Subnet Mask\n        .gw = { 192, 168, 150, 1 },                     // Gateway\n        .dns = { 192, 168, 150, 1 },                    // DNS server\n        .dhcp = NETINFO_DHCP                        // DHCP enable/disable\n        };\n</code></pre>"},{"location":"blog/blog-microscurid/#2-paste-your-certificate","title":"2. Paste your certificate","text":"<p>We also need to paste the certificate, which is to be used for encryption in <code>Drivers/TLS/certificate.h</code>.</p> <p>We'll use the subordinate ca certificate generate from Scurid for this blog.</p> <pre><code>const char  self_signed_certificate[] = \\\n\"-----BEGIN CERTIFICATE-----\\n\" \\\n\"MIIGTjCCBDagAwIBAgIUAKvvmZw3VLawhM9mvTKFJubPj78wDQYJKoZIhvcNAQEL\\n\" \\\n\"BQAwZDELMAkGA1UEBhMCanAxDjAMBgNVBAgTBXRva3lvMQ4wDAYDVQQHEwV0b2t5\\n\" \\\n\"...\\n\" \\\n\"bzEPMA0GA1UEChMGc2N1cmlkMQ8wDQYDVQQLEwZzY3VyaWQxEzARBgNVBAMTCnNj\\n\" \\\n\"dXJpZC5jb20wHhcNMjIwOTI4MDQyODQ2WhcNMzExMjI4MjA0NTUxWjBkMQswCQYD\\n\" \\\n\"D+mhQS2JfxyOjx2RmiJUqTCJRBvSTk0DfMItaFxV+BJ5nA==\\n\" \\\n\"-----END CERTIFICATE-----\\n\";\n</code></pre>"},{"location":"blog/blog-microscurid/#3-fix-the-conflict-between-macros","title":"3. Fix the conflict between macros.","text":"<p>There may also be some conflicts between the <code>W5500</code> and <code>STM32</code> library. Modify <code>MR</code> =&gt; <code>W_MR</code> in the <code>/p-nucleo-wb55/Middlewares/ioLibrary_Driver/Ethernet/W5500/w5500.h</code>.</p> <pre><code>#define W_MR                 (_W5500_IO_BASE_ + (0x0000 &lt;&lt; 8) + (WIZCHIP_CREG_BLOCK &lt;&lt; 3))\n\n// ...............\n\n/////////////////////////////////\n// Common Register I/O function //\n/////////////////////////////////\n/**\n * @ingroup Common_register_access_function\n * @brief Set Mode Register\n * @param (uint8_t)mr The value to be set.\n * @sa getMR()\n */\n#define setMR(mr) \\\n    WIZCHIP_WRITE(W_MR,mr)\n\n\n/**\n * @ingroup Common_register_access_function\n * @brief Get Mode Register\n * @return uint8_t. The value of Mode register.\n * @sa setMR()\n */\n#define getMR() \\\n        WIZCHIP_READ(W_MR)\n</code></pre>"},{"location":"blog/blog-microscurid/#4-ensure-cube-ide-access-to-the-library","title":"4. Ensure Cube IDE access to the library","text":"<p>In <code>properties -&gt; C/C++ Build -&gt; Settings</code>, check the following</p> <ul> <li>the middlewares and their search paths are configured correctly in <code>MCU GCC Compiler -&gt; Include Paths</code> </li> <li>the microscurid library and their search paths are configured correctly in <code>MCU GCC Linker -&gt; Libraries</code></li> </ul>"},{"location":"blog/blog-microscurid/#5-configuring-the-rtc-timer","title":"5. Configuring the RTC timer","text":"<p>The RTC timer must be configured to provide an accurate timestamp. Configure them here in: <code>microscurid-c/examples/p-nucleo-wb55/Core/Src/main.c</code></p> <pre><code>sTime.Hours = 0x11;\nsTime.Minutes = 0x32;\nsTime.Seconds = 0x0;\nsTime.SubSeconds = 0x0;\nsTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;\nsTime.StoreOperation = RTC_STOREOPERATION_RESET;\nif (HAL_RTC_SetTime(&amp;hrtc, &amp;sTime, RTC_FORMAT_BCD) != HAL_OK)\n{\n    Error_Handler();\n}\nsDate.WeekDay = RTC_WEEKDAY_SATURDAY;\nsDate.Month = RTC_MONTH_NOVEMBER;\nsDate.Date = 0x26;\nsDate.Year = 0x2022;\n</code></pre>"},{"location":"blog/blog-microscurid/#2-preparation-on-the-server-and-the-scurid-app","title":"2. Preparation on the server and the Scurid App","text":"<p>Before running the server, we need to fill in our certificate info in <code>config.yaml</code>. Make sure to fill in all the required fields. The code below is an example with all the required fields filled in.</p> <pre><code>ServerCert:\n  CommonName: localhost\n  Country: JP\n  Province: Tokyo\n  Locality: Tokyo\n  Organization: ScuridInc.\n  OrganizationalUnit: Software Team\n  EmailAddress: info@scurid.com\n  LifetimeDays: 730 # default 2 years, minimum 1 month, maximum 10 years\n</code></pre> <p>Launch the server if config provided correctly you may see following log.</p> <pre><code>$ ./imagebuild/service-v22.0.1-alpha.0-darwin\n2022-12-18 00:20:27.000 DBG connected to Scurid SSI Service xxx.scurid.com:443\n2022-12-18 00:20:27.000 DBG found path for store\n...\n2022-12-18 00:20:29.000 INF License is activated!\n</code></pre> <p>Next open the Scurid App. The App should open the following page:</p> <p></p> <p>Choose any directory for the storage. Next, we fill in the user info.</p> <p></p> <p>Finally, we set up the master password (for the beta version, please be careful as there is no password reset feature, yet).</p> <p></p> <p>We can skip configuring the storage for now.</p> <p></p> <p>We are finally done with the on-boarding for Scurid App! Congrats!</p> <p></p> <p>The following files will be created in the storage directory we chose in the on-boarding. DO NOT manually edit / move these files.</p> <pre><code>000001.vlog\nDISCARD\n00001.mem\nKEYREGISTRY\nMANIFEST\nLOCK\n</code></pre>"},{"location":"blog/blog-microscurid/#3-generate-and-send-the-identity-request-from-mcu","title":"3. Generate and send the identity request from MCU","text":"<p>It is time to run the example code on the MCU. Click the run icon on the IDE.</p> <p>It takes about 3 minutes to establish the TLS connection and send the identity over to the server.</p>"},{"location":"blog/blog-microscurid/#4-approving-the-mcu-identity-on-the-scurid-app","title":"4. Approving the MCU identity on the Scurid App","text":"<p>Once the data is sent via the TLS connection, you can approve the device on the Scurid App.</p> <p>Login to the Scurid App and open the <code>Identities</code> tab. Inside the <code>Identities</code> tab, open the <code>Pending</code> tab. You should see a pending identity, if it was sent properly to the server.</p> <p></p> <p>Each identity is bound to its underlying hardware, click on the pending device identity &amp; click approve at the bottom of the identity card.</p> <p></p> <p>The approval process takes a few seconds to register the transaction on Scurid SSI service, which in turns registers the data on distributed ledger.</p> <p></p> <p>When the approval is done, you should be able to see confirmation on the Scurid App for respective identity. Click anywhere outside the modal to exit.</p> <p></p> <p>The approved identity will appear in the <code>Approved</code> tab.</p> <p></p> <p>That's it your microcontroller is now ready with an unique digital identity which be used for authentication and authorization with any IoT/IIoT Platform.</p>"},{"location":"integration/integration-thingworx/","title":"Scurid Distributed ID for PTC ThingWorx IoT platform","text":"<p>This page describes how Scurid integrates, adds and support out of the box authentication and authorization mechanism of PTC's ThingWorx, an IIoT Platform.</p> <p>Integrating Scurid's distributed digital identity with ThingWorx is straight forward, it does not require any external plugins to be imported or any kind of extension creation for ThingWorx.</p> <p>No strip &amp; replace</p> <p>Scurid's integration does not strip &amp; replace ThingWorx's standard ways of functioning, rather it adds as a security layer to the existing digital identity mechanism in ThingWorx.</p>"},{"location":"integration/integration-thingworx/#key-highlights","title":"Key highlights","text":"<ul> <li>Drastically reduce the time to onboard new devices. </li> <li>Secure with low touch, low configuration requirements.</li> <li>Reducing/removing the \"man-in-the-middle\" attack vector.</li> <li>Removes fixed credentials usage if you are building custom mechanism (like <code>bash</code> scripts etc.) to distribute Application Key to the Edge devices. </li> <li>Removing the manual effort that's needed to deliver ThingWorx's primary authentication mechanism Application Key to the edge devices.</li> <li>Scurid does not create / assign access rights/permissions within ThingWorx, allowing you complete control on what access rights to be assigned to these new users and application keys.</li> <li>All communication happens over TLS.</li> </ul>"},{"location":"integration/integration-thingworx/#scope-and-use","title":"Scope and use","text":"<p>This integration is for users who :</p> <ul> <li>Already have or are planning to deploy ThingWorx IIoT Platform.</li> <li>Using ThingWorx's Edge SDK like <code>ThingWorx Edge Java SDK</code> , <code>ThingWorx Edge C SDK</code>, etc. to connect and collect data from IoT Edge Devices , this integration also supports if you have any custom connector e.g. REST based connector written in <code>Python</code>, etc.. </li> <li>Creating and delivering ThingWorx based <code>Application Keys</code> to the IoT Edge Devices in order to identify and authenticate devices with the ThingWorx Server.</li> </ul>"},{"location":"integration/integration-thingworx/#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Have a running ThingWorx Server and be ready with following :</li> <li>ThingWorx Server and port information e.g. <code>https://localhost:443/Thingworx</code></li> <li>Created <code>Application Key</code> in ThingWorx having enough rights to create following Entities in ThingWorx<ul> <li>Things</li> <li>User</li> <li>Application Key</li> </ul> </li> <li>Have installed and completed Scurid installation &amp; on-boarding, see Quickstart guide</li> </ul>"},{"location":"integration/integration-thingworx/#enabling-thingworx-with-scurids-digital-identity","title":"Enabling ThingWorx with Scurid's Digital Identity","text":""},{"location":"integration/integration-thingworx/#step-1-configure-thingworx-server-information-in-scurid","title":"Step 1: Configure ThingWorx server information in Scurid","text":"<p>Provide Server Address with port &amp; Application Key to your locally installed Scurid App. Using this Scurid will establish REST API connection to create User and Application Key when a new device identity is approved on Scurid.</p>"},{"location":"integration/integration-thingworx/#step-2-install-and-run-scurid-edge-agent","title":"Step 2: Install and run Scurid Edge agent","text":"<p>Scurid Edge agent is a small client designed to work on variety of edge platforms. Run Scurid Edge Agent with flag <code>-twxreg true</code>.</p> <pre><code>$ ./scuridedgeagent-linux-arm7 -spaaddr &lt;scuridServerAddress&gt;:443 -twxreg true\n</code></pre> <p>Note</p> <p><code>-twxreg</code> flag is <code>false</code> by default.</p> <p>Scurid Edge Agent will perform following automated tasks</p> <ol> <li>Create new digital identity wallet on the device </li> <li>Create new distributed digital identity</li> <li>Encrypts and store its private key on the device </li> <li>Collects required device context which is made up of different kind of hardware information like<ol> <li>Information about OS &amp; RAM</li> <li>MAC addresses, etc. </li> <li>This device context is bundled together with the public key, created in step 2, then sent to the Scurid App, this is visible in <code>Home &gt; Agents &gt; Pending</code>      a. Click on the Pending identity to see the Public ID,      b. Switch to <code>Device Context</code> to see hardware information </li> <li>Scurid Edge Agent will wait for the Approval from the user on Scurid App</li> </ol> </li> <li> <p>To approve an agent's identity navigate to the <code>Home &gt; Agents &gt; Pending &gt; Click on the Pending Agent &gt; Click Approve</code> . </p> <p>Approving the Agent/Device's identity will trigger following automated events :</p> <ul> <li>Registering an identity in Scurid will trigger transaction on Scurid hosted distributed ledger under Scurid SSI Service.</li> <li>Generation of Approval signature, by signing the request from the Scurid Edge Agent, its device context, timestamps</li> <li>Next, Scurid server will trigger the request to ThingWorx to :<ul> <li>Create New User, using the public key/public ID of the Scurid Edge Agent </li> <li>Create New Application Key, referencing the user from previous step </li> </ul> </li> <li>Approval Key from the <code>Parent identity</code>, which belongs to you when you installed Scurid stack - this automatically gets created </li> <li>Agent's own identity and some other contextual information like approval date etc. </li> </ul> </li> </ol>"},{"location":"integration/integration-thingworx/#step-3-access-thingworx-application-key-on-the-edge","title":"Step 3: Access ThingWorx Application Key on the Edge","text":"<p>Finally, Scurid Server will package the <code>Approval Signature</code> &amp; ThingWorx's <code>Application Key</code> and send it to the Scurid Edge Agent running on your IoT Edge device to complete the device's digital identity on-boarding and transfer of ThingWorx <code>Application Key</code> to the device and ready to be used by ThingWorx Edge SDK software running on this device.</p>"},{"location":"microscurid/createIdentity/","title":"Create Identity Using MicroScurid-C SDK","text":""},{"location":"microscurid/createIdentity/#overview","title":"Overview","text":"<p>Microscurid enables you to create identities on your MCUs.</p>"},{"location":"microscurid/createIdentity/#pre-requisites","title":"Pre-requisites","text":"<p>You must download the MicroScurid-c library. Contact us at info@scurid.com</p>"},{"location":"microscurid/createIdentity/#steps","title":"Steps","text":"<p>You must include the header file and create the identity</p> STM32AMD64 <pre><code>#include \"microscurid.h\"\n\n{\n    scurid_did_t did;\n    while (create_identity(task_interface-&gt;hrng, &amp;did) == -1)\n    {\n        printf(\"Error generating did, trying again in 100ms...\\r\\n\");\n        HAL_Delay(100);\n    }\n\n    printf(\"\\ndid:%s:%s\\r\\n\\n\", did.method, did.identifier);\n}\n</code></pre> <pre><code>#include \"microscurid.h\"\n\nint main(void) {\n    scurid_did_t did;\n\n    create_identity(&amp;did);\n    return 0;\n}\n</code></pre>"},{"location":"microscurid/gettingStartedMicroscurid/","title":"How to Get Started with MicroScurid-C SDK","text":""},{"location":"microscurid/gettingStartedMicroscurid/#getting-started-with-microscurid","title":"Getting Started with MicroScurid","text":""},{"location":"microscurid/gettingStartedMicroscurid/#overview","title":"Overview","text":"<p>MicroScurid-c is the C implementation of some features from Scurid Edge Agent. MicroScurid-c can be used to generate identities and register them on the server via TLS communication on Microcontrollers(MCUs) and Linux systems. For communication with Scurid Server it utilizes data structures defined and governed by standard proto buffers, via Nanopb library.</p>"},{"location":"microscurid/gettingStartedMicroscurid/#getting-access-to-the-library","title":"Getting access to the library","text":"<p>Contact us at info@scurid.com</p>"},{"location":"microscurid/gettingStartedMicroscurid/#platform-details","title":"Platform Details","text":"STM32Linux <p>Microscurid-c works on the STM32WB Series. A separate adapter for ethernet connection may be needed, e.g. PoE FeatherWing</p> <p>Getting started with the example code may help you grasp the idea of what Microscurid-c is doing. Below are the instructions of how to configure the network and timestamp settings.</p> <p>Coming soon.</p>"},{"location":"microscurid/gettingStartedMicroscurid/#configuring-the-server-ip-gateway-ip-server-port","title":"Configuring the server IP / gateway IP / server port","text":"<p>The gateway IP, subnet masks, etc. can be configured in <code>examples/p-nucleo-wb55/Core/Src/app_freertos.c</code>.</p> <pre><code>#define BACKEND_SERVER_PORT 8888\n\nstatic wiz_NetInfo g_net_info = { .mac = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },// MAC address\n        .ip = { 192, 168, 151, 127 },                    // IP address\n        .sn = { 255, 255, 254, 0 },                     // Subnet Mask\n        .gw = { 192, 168, 150, 1 },                     // Gateway\n        .dns = { 192, 168, 150, 1 },                    // DNS server\n        .dhcp = NETINFO_DHCP                        // DHCP enable/disable\n        };\n\nunsigned char BACKEND_SERVER_IP[4] = {192,168,151,128};\n</code></pre>"},{"location":"microscurid/gettingStartedMicroscurid/#configuring-the-rtc-timer","title":"Configuring the RTC timer","text":"<p>The RTC timer must be configured to provide an accurate timestamp. Configure them here in: <code>microscurid-c/examples/p-nucleo-wb55/Core/Src/main.c</code></p> <pre><code>sTime.Hours = 0x11;\nsTime.Minutes = 0x32;\nsTime.Seconds = 0x0;\nsTime.SubSeconds = 0x0;\nsTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;\nsTime.StoreOperation = RTC_STOREOPERATION_RESET;\nif (HAL_RTC_SetTime(&amp;hrtc, &amp;sTime, RTC_FORMAT_BCD) != HAL_OK)\n{\n    Error_Handler();\n}\nsDate.WeekDay = RTC_WEEKDAY_SATURDAY;\nsDate.Month = RTC_MONTH_NOVEMBER;\nsDate.Date = 0x26;\nsDate.Year = 0x2022;\n</code></pre>"},{"location":"microscurid/registrationRequestOfIdentity/","title":"Handling the Registration Request of Identity on the Scurid App","text":""},{"location":"microscurid/registrationRequestOfIdentity/#scurid-app","title":"Scurid App","text":"<p>Once the data is sent via the TLS connection, you can approve the device on the Scurid App.</p> <p>Login to the Scurid App and open the <code>Identities</code> tab. Inside the <code>Identities</code> tab, open the <code>Pending</code> tab. You should see a register request if it was sent properly to the server.</p> <p></p> <p>Click on the device you want to approve, and click on approve at the bottom of the page</p> <p></p> <p>The approval process takes a few seconds to register the transaction on Scurid SSI service, which in turns registers the data on distributed ledger.</p> <p></p> <p>When the approval is done, you should be able to see confirmation on the Scurid App for respective identity. Click anywhere outside the modal to exit.</p> <p></p> <p>The approved identity will appear in the <code>Approved</code> tab.</p> <p></p>"},{"location":"microscurid/setupTLS/","title":"How to Setup TLS Using MicroScurid-C SDK","text":""},{"location":"microscurid/setupTLS/#adding-the-certificate","title":"Adding the certificate","text":"STM32AMD64 <p>STM32 uses Mbed TLS and its APIs.</p> <p>Certificates are issued by Scurid, contact us at info@scurid.com. Add the content of the certificate to <code>examples/p-nucleo-wb55/Drivers/TLS/certificate.h</code>. To use the certificate in STM32, we must format the file so that it resembles the one below:</p> <pre><code>const char  self_signed_certificate[] = \\\n\"-----BEGIN CERTIFICATE----- \\r\\n\" \\\n\"MIIFPjCCAyagAwIBAgITc1wgneP76oa7kdwzfcsbFbziPjANBgkqhkiG9w0BAQsF \\r\\n\" \\\n\"ADBkMQswCQYDVQQGEwJqcDEOMAwGA1UECBMFdG9reW8xDjAMBgNVBAcTBXRva3lv \\r\\n\" \\\n\"MQ8wDQYDVQQKEwZzY3VyaWQxDzANBgNVBAsTBnNjdXJpZDETMBEGA1UEAxMKc2N1 \\r\\n\" \\\n\"cmlkLmNvbTAeFw0yMjExMDExNzAwMzZaFw0yMjExMTMwNjQ3MTVaMGsxCzAJBgNV \\r\\n\" \\\n...\n\"8GshMG8AT85A56s/HVhd+/KW5IWCbz3KpyoG/Z5YBtKzxVEPI1bjZdmVHwlUDJVW \\r\\n\" \\\n\"YxY= \\r\\n\" \\\n\"-----END CERTIFICATE----- \\r\\n\";\n</code></pre> <p>Here is a simple python script to edit the certificate to this format:</p> <pre><code>file1 = open('ca.crt', 'r')\nLines = file1.readlines()\nn = len(Lines)\nprint(n)\n\nwith open('ca-edited.crt', 'w') as f:\n    for i, line in enumerate(Lines):\n        if i == n - 1:\n            f.write('\"' + line.strip() + ' \\\\r\\\\n' + '\"' + \";\\n\")\n            break\n        f.write('\"' + line.strip() + ' \\\\r\\\\n' + '\"' + \" \\\\\" + \"\\n\")\n</code></pre> <p>Coming soon.</p>"},{"location":"microscurid/setupTLS/#actual-code","title":"Actual code","text":"STM32AMD64 <p>It takes about 2~3 minutes to establish the TLS connection on the STM32.</p> <pre><code>wiz_tls_context tlsContext;\n\nret = wiz_tls_init(&amp;tlsContext,&amp;server_fd); // should return 1\n\nret = wiz_tls_connect(&amp;tlsContext, BACKEND_PORT, gServer_IP); // should return 0\n\nwhile (create_identity(task_interface-&gt;hrng, &amp;did) == -1)\n{\n    printf(\"Error generating did, trying again in 100ms...\\r\\n\");\n    HAL_Delay(100);\n}\n\nprintf(\"\\ndid:%s:%s\\r\\n\\n\", did.method, did.identifier);\n\ndata_len = create_data_buffer(&amp;did, g_send_buf, timestamp);\n\n/*  Write data to the SSL channel  */\nret = wiz_tls_write(&amp;tlsContext, g_send_buf, data_len);\n</code></pre> <p>If running locally, you can check on Wireshark what is happening. The flow graph should look similar to here: </p> <p>Coming soon.</p>"},{"location":"quickstart/quickstart-for-managed/","title":"Quickstart - For Managed Deployment","text":""},{"location":"quickstart/quickstart-for-managed/#overview","title":"Overview","text":"<p>This page covers how to get started with Scurid Platform with for Managed deployment.</p> <p>Need help with managed instance configuration details ?</p> <p>Raise your request here Support</p> <p>Info</p> <p>Scurid platform consists of three main components :</p> <ol> <li>Scurid Edge Agent and MicroScurid-C SDK</li> <li>Scurid Server</li> <li>Desktop App (mobile app coming soon)   </li> </ol>"},{"location":"quickstart/quickstart-for-managed/#downloads","title":"Downloads","text":"<p>Navigate to Getting Started to download the latest version of Scurid software components.</p> Service Agreement <p>By downloading Scurid Software you agree to the Service Agreement</p>"},{"location":"quickstart/quickstart-for-managed/#download-scurid-edge-agent","title":"Download Scurid Edge Agent","text":"<p>There are builds available for a variety of hardware and OS platforms. Download the appropriate build for your platform. Please check the download page for the latest supported platforms.</p>"},{"location":"quickstart/quickstart-for-managed/#download-scurid-app","title":"Download Scurid App","text":"<p>There are builds available for <code>linux</code>, <code>macos</code> and <code>windows</code> platforms. Download the appropriate build for your platform.</p>"},{"location":"quickstart/quickstart-for-managed/#step-2-launching-scurid-app","title":"Step 2 : Launching Scurid App","text":"<p>This step sets up your account and other related configurations that are needed in order to complete the user on-boarding process.</p> <ol> <li>Launch the Scurid App  </li> <li>Select Create a new instance, fill in your valid email address and accept the terms of service to Sign up </li> <li>Above step will email you with a code to verify your email</li> <li>On the next screen pick the best pricing plan that suits your need. Scurid offers a free plan for non production use.</li> <li>Select <code>Managed</code> from the dropdown and fill in the required server address and port information received from Scurid </li> <li>Select User type and click next </li> <li>Select your country </li> <li>Enter your name and click next </li> <li>Enter the code sent on your email, and continue </li> <li>Create a 13 character long master passphrase, and click next </li> <li>We offer built in support for CockroachDB's Managed Serverless (perfect for PoCs and starter projects) or connect your own CockroachDB instance, or you can skip this step and configure it later. </li> </ol> <p>That's it. You are now ready to start deploying agents and start creating new identities using them.</p>"},{"location":"quickstart/quickstart-for-managed/#step-3-deploying-scurid-edge-agent-on-your-iot-hardware","title":"Step 3 : Deploying Scurid Edge Agent on your IoT hardware","text":"<p>Agent is a single binary, which can be easily configured to run as a service, on desired platform. It is a fully self-contained binary requiring no additional elements.</p> <p>If you are downloading the agent for the first time on <code>linux</code> or related platform you may need to make the binary executable using </p> <p>Example :  <pre><code>sudo chmod +x scuridedgeagent-linux-arm7 \n</code></pre></p> <p>Execute the binary, ensure that the terminal is not closed if the agent is not configured to run as a service.</p> <p>Example : <pre><code>./scuridedgeagent-linux-xxx -spaaddr scurid.democompany.com:&lt;port&gt; -syncrate 30s\n</code></pre></p>"},{"location":"quickstart/quickstart-on-premise/","title":"Quickstart - On-Premise","text":""},{"location":"quickstart/quickstart-on-premise/#overview","title":"Overview","text":"<p>This page covers how to get started with Scurid Platform with on-premise deployment.</p> <p>Info</p> <p>Scurid platform consists of three main components :</p> <ol> <li>Scurid Edge Agent and MicroScurid-C SDK</li> <li>Scurid Server</li> <li>Desktop App (mobile app coming soon)   </li> </ol> Interested in Managed deployment ? <p>If you are interested in Managed deployment, raise your request here Support</p>"},{"location":"quickstart/quickstart-on-premise/#downloads","title":"Downloads","text":"<p>Navigate to Getting Started to download the latest version of Scurid software components.</p> Service Agreement <p>By downloading Scurid Software you agree to the Service Agreement</p>"},{"location":"quickstart/quickstart-on-premise/#download-scurid-edge-agent","title":"Download Scurid Edge Agent","text":"<p>There are builds available for a variety of hardware and OS platforms. Download the appropriate build for your platform. Please check the download page for the latest supported platforms.</p>"},{"location":"quickstart/quickstart-on-premise/#download-scurid-app","title":"Download Scurid App","text":"<p>There are builds available for <code>linux</code>, <code>macos</code> and <code>windows</code> platforms. Download the appropriate build for your platform.</p>"},{"location":"quickstart/quickstart-on-premise/#download-scurid-server","title":"Download Scurid Server","text":"<p>Download the appropriate build for your platform from the downloads page. There are builds available for <code>linux</code>, <code>macos</code> and <code>windows</code> platforms.</p> <ol> <li>Create a config folder and inside create a config.yaml file, with following content     <pre><code>ServerCert:\n CommonName: example.com # domain name of the server\n Country: DK # country\n Province: Copenhagen # city\n Locality: Copenhagen # city\n Organization: Example ApS # name of the organization\n OrganizationalUnit: Software Team # name of the team\n EmailAddress: info@example.com # email address\n LifetimeDays: 90 # number of days the certificate is valid\n SubjectAlternativeNames:\n    - \"*.yourcompany.com\" # Wildcard domain\n CertStorageDirectory: certs\nMonitoring:\n Port: 8081 # default, used by prometheus\n Address: localhost # default, used by prometheus\n</code></pre></li> <li>Open a terminal and execute the downloaded Server binary, ensure that the terminal is not closed     <pre><code>./&lt;binary name&gt; -config config/config.yaml\n</code></pre></li> </ol> linuxmacoswindows <pre><code>./&lt;binary name-linux&gt; -config config/config.yaml\n</code></pre> <pre><code>./&lt;binary name-darwin&gt; -config config/config.yaml\n</code></pre> <pre><code>.\\&lt;binary name-windows&gt; -config config/config.yaml\n</code></pre>"},{"location":"quickstart/quickstart-on-premise/#step-2-launching-scurid-server-and-app","title":"Step 2 : Launching Scurid Server and App","text":"<p>This steps sets up the server and certain configurations that are needed in order to complete the user on-boarding process.</p> <ol> <li>Launch the Scurid App  </li> <li>Select Create a new instance, fill in your valid email address and accept the terms of service to Sign up </li> <li>Above step will email you with a code to verify your email</li> <li>On the next screen pick the best pricing plan that suits your need. Scurid offers a free plan for non production use.</li> <li>Select On-Premise and fill in the required server address, port and storage directory where you'd like Scurid Server to persist its data </li> <li>Select User type and click next </li> <li>Select your country, </li> <li>Enter your name and click next </li> <li>Enter the code sent on your email, and click next </li> <li>Create a 13 character long master passphrase, and click next </li> <li>We offer built in support for CockroachDB's Managed Serverless (perfect for PoCs and starter projects) or connect your own CockroachDB instance, or you can skip this step and configure it later. </li> </ol> <p>That's it. You are now ready to start deploying agents and start creating new identities using them.</p>"},{"location":"quickstart/quickstart-on-premise/#step-3-deploying-scurid-edge-agent-on-your-iot-hardware","title":"Step 3 : Deploying Scurid Edge Agent on your IoT hardware","text":"<p>Agent is a single binary, which can be easily configured to run as a service, on desired platform. It is a fully self-contained binary requiring no additional elements.</p> <p>If you are downloading the agent for the first time on <code>linux</code> or related platform you may need to make the binary executable using </p> <p>Example :  <pre><code>sudo chmod +x scuridedgeagent-linux-arm7 \n</code></pre></p> <p>Execute the binary, ensure that the terminal is not closed if the agent is not configured to run as a service.</p> <p>Example : <pre><code>./scuridedgeagent-linux-xxx -spaaddr 192.168.1.232:443 -syncrate 30s\n</code></pre></p>"},{"location":"releasenotes/releasenotes/","title":"Release Notes","text":""},{"location":"releasenotes/releasenotes/#october-29-2023","title":"October 29, 2023","text":""},{"location":"releasenotes/releasenotes/#general-changes","title":"General changes","text":"<ul> <li>Integrations across IoT and OT platforms like Hawkbit, PTC ThingWorx to automate identity and device onboarding. </li> <li>Automated Azure IoT device certificate delivery to IoT devices running Edge Agent. </li> <li>Enhanced user on-boarding process.</li> <li>Invite new users to join your organization.</li> <li>Email verification and password reset.</li> <li>Data collection and storage in Self-hosted CockroachDB.</li> <li>Bugfixes and performance improvements.</li> <li>Adoption of QBFT consensus algorithm in Scurid SSI.</li> <li>Performance monitoring (in beta)</li> <li>New releases will now be published on Scurid Downloads page.</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-app","title":"Scurid App","text":"<ul> <li>Users can now configure agents to send data to self-hosted CockroachDB.</li> <li>Ability to change and enhance agent name.</li> <li>Create custom data structures for agents, by defining data structure in JSON format.</li> <li>Allow custom DB table creation and assignment to agents.</li> <li>Built-in reporting on data signing and verification on each agent.</li> <li>Simple pricing tiers, including free developer tier, available during sign-up.</li> <li>Invite new users to join your organization through simple user management.</li> <li>Release management widget to keep track of latest releases directly from the App.</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-server","title":"Scurid Server","text":"<ul> <li>Promethues integration for performance monitoring</li> <li>Rate limiting on all gRPC API calls</li> <li>Region and connection handler for CockroachDB</li> <li>Built in email server for supporting new user invites</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-edge-agent","title":"Scurid Edge Agent","text":"<ul> <li>Support for new data streaming APIs.</li> <li>Built in data signing and verification for each agent during data collection.</li> <li>New config.ymal file on the deivce to track agent configuration downloaded from the server. </li> </ul>"},{"location":"releasenotes/releasenotes/#december-11-2022","title":"December 11, 2022","text":""},{"location":"releasenotes/releasenotes/#general-changes_1","title":"General changes","text":"<ul> <li>Support for Microcontrollers esp. STM32, with launch of MicroScurid-C library</li> <li>Integration into CockroachDB for offering low code global storage for IoT/IIoT data</li> <li>Communication between Microcontroller and Scurid Server over protocol buffers</li> <li>Renaming Scurid backend to Scurid Server</li> <li>Each Scurid Server deployment to generate and manage its own server certificate</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-app_1","title":"Scurid App","text":"<ul> <li>Select and create desired region for data storage</li> <li>Simplified flow to create database from the App</li> <li>Enhanced user on-boarding process to define data storage region</li> <li>Assign agents to data storage region</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-server_1","title":"Scurid Server","text":"<ul> <li>Added TCP server to handle communication with Microcontrollers</li> <li>Several new internal APIs for subsystems, and data stream handling</li> <li>Region and connection handler for CockroachDB</li> <li>Database creation via CockroachDB</li> <li>Queries and batch management for data storage</li> </ul>"},{"location":"releasenotes/releasenotes/#microscurid-c","title":"MicroScurid-C","text":"<ul> <li>Create distributed identity (DID)</li> <li>Registration of identity with Scurid Server</li> <li>Setup TLS connection with Scurid Server</li> </ul>"},{"location":"releasenotes/releasenotes/#august-15-2022","title":"August 15, 2022","text":""},{"location":"releasenotes/releasenotes/#general-changes_2","title":"General changes","text":""},{"location":"releasenotes/releasenotes/#scurid-platform-app","title":"Scurid Platform App","text":"<ul> <li>Add helm pkg management for managed scurid backend #SPA-220</li> <li>Add platforminternal service to backend #SPA-188</li> <li>Update look and feel for Scurid Platform App #SPA-144</li> <li>Enable users to add or remove tags from the identities #SPA-99</li> <li>New Scurid Platform App and identity logging visibility</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-backend","title":"Scurid Backend","text":"<ul> <li>Logging APIs #SPA-230</li> <li>Enable authentication on Logging APIs #SPA-237</li> <li>Signed critical identity operations logs built-in #SPA-230</li> <li>SPA-243 Add licensing check</li> </ul>"},{"location":"releasenotes/releasenotes/#enhancement","title":"Enhancement","text":"<ul> <li>Remove the visit button SPA-200</li> <li>Rename DID to Device Identity on Identity card #SPA-222</li> <li>Make text on the app selectable #SPA-203</li> <li>Add auto approve identity setting #SPA-191</li> <li>Maintain path structures in post verify process on identities #SPA-139</li> <li>Enable path store in Approved identities #SPA-118</li> <li>Update client call in the gRPC dart for Scurid platform App #SPA-103</li> <li>Enable country search while on-boarding new user</li> <li>Make side menu collapsible #SPA-216</li> </ul>"},{"location":"releasenotes/releasenotes/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Pending identities do not show agent version #SPA-239</li> <li>List of related identities to an agent is missing #SPA-238</li> <li>For some identities, agent identity is missing #SPA-236</li> <li>Pending identities do not show context #SPA-234</li> <li>After approval card does not dismiss #SPA-233</li> <li>Bad state : No Element error #SPA-231</li> <li>Clean installation fails, unable to find subsystems #SPA-214</li> <li>A tag can be assigned to an identity multiple times #SPA-180</li> <li>Scurid backend crashes when staged folder is empty #SPA-179</li> <li>Inconsistent error popup #SPA-130</li> <li>Path display inconsistencies #SPA-129</li> </ul>"},{"location":"releasenotes/releasenotes/#june-13-2022","title":"June 13, 2022","text":""},{"location":"releasenotes/releasenotes/#general-changes_3","title":"General changes","text":""},{"location":"releasenotes/releasenotes/#scurid-platform-app_1","title":"Scurid Platform App","text":"<ul> <li>Enhanced UX with grid and table structure for Scurid Edge Agent and device identities</li> <li>Added identities count summary for each agent #SPA-206</li> <li>Users will now be able to reference agent identities with alias #SPA-202</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-backend_1","title":"Scurid Backend","text":"<ul> <li>Easy identifiable names for agents, when not defined by the user #SPA-209</li> </ul>"},{"location":"releasenotes/releasenotes/#bug-fixes_1","title":"Bug Fixes","text":""},{"location":"releasenotes/releasenotes/#scurid-platform-app_2","title":"Scurid Platform App","text":"<ul> <li>Incorrect Scurid App binary name #SPA-212</li> <li>Fixed empty device context SPA-210</li> <li>Fixed Scurid Edge Agent name truncation during window resizing #SPA-201</li> </ul>"},{"location":"releasenotes/releasenotes/#scurid-backend_2","title":"Scurid Backend","text":"<ul> <li>Fixed issue with new installation unable to find Settings subsystem #SPA-214</li> <li>Fixed missing timestamp on Agent identity post reverification process SPA-204</li> </ul>"},{"location":"server/flags/","title":"Command-line flags","text":"<p>Flags to help you configure the server at startup. These flags can be set in the command line when starting the server.</p> Flag Default Description -port 8082 Sets the main server port (legacy/unused in current startup; kept for compatibility). -keystore keys/ Filesystem path where the platform key store is located. -scuridservice beta2.scurid.com:443 DO NOT EDIT until Scurid officially publishes new address of the Scurid SSI service the backend connects to. -pkgstore devicepkg/ Directory for device packages and related artifacts. -authport 8083 Port for the (optional) Auth HTTP server. -tcp :8888 TCP API server bind address for plain HTTP/TCP endpoints. -serverconfig config/config.yaml Path to the primary server YAML configuration file. -monitor true Enables Prometheus metrics and starts the metrics HTTP server when true. -log log/ Directory where server logs are written. -logtofile false If true, logs are written only to file (no console output). -sshport 2200 Port for the SSH server to listen on (reverse SSH feature). -multiplexport 2201 Port used by the SSH multiplexer endpoint for client apps."}]}